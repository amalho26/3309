{"ast":null,"code":"var _jsxFileName = \"/Users/aikam320/SE3309DBMS/client/src/pages/Tweet.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Container, Row, Col, Form, Card } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport { useCookies } from 'react-cookie';\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst moment = require('moment');\n\nexport default function Tweet() {\n  _s();\n\n  const [cookies, setCookie, removeCookie] = useCookies(['userId']);\n  const [tweet, setTweet] = useState(\"\");\n  const [tweetList, setTweetList] = useState([{}]);\n\n  const getList = () => {\n    axios.get('http://localhost:3005/tweets/user/' + cookies.userId).then(res => {\n      if (res) {\n        setTweetList(res.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getList();\n  }, []); // Redirect if not logged in\n\n  if (!cookies.userId) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  } // When the value changes for the text area\n\n\n  const handleChange = event => {\n    setTweet(event && event.target.value ? event.target.value : \"\");\n  }; // Save tweet\n\n\n  const save = async () => {\n    if (tweet) {\n      axios.post('http://localhost:3005/tweets', {\n        user_id: cookies.userId,\n        content: tweet\n      }).then(async res => {\n        await getList();\n        setTweet(null);\n      });\n    }\n  }; // Remove tweet\n\n\n  const remove = async id => {\n    console.log(id);\n    axios.delete('http://localhost:3005/tweets/' + id).then(async res => {\n      await getList();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlTextarea1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Tweet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: \"3\",\n              value: tweet || \"\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"button\",\n            onClick: save,\n            children: \"Post tweet!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tweets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), tweetList.length && tweetList.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '18rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                  className: \"mb-2 text-muted\",\n                  children: moment(item.date_time).format('LLL')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: item.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  \"data-id\": item.id,\n                  onClick: () => remove(item.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tweet, \"c/rn7Stva3wbQJedMPln5hM2wcw=\", false, function () {\n  return [useCookies];\n});\n\n_c = Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/Users/aikam320/SE3309DBMS/client/src/pages/Tweet.jsx"],"names":["React","Fragment","useState","useEffect","Button","Container","Row","Col","Form","Card","Helmet","useCookies","Redirect","axios","require","moment","Tweet","cookies","setCookie","removeCookie","tweet","setTweet","tweetList","setTweetList","getList","get","userId","then","res","data","handleChange","event","target","value","save","post","user_id","content","remove","id","console","log","delete","length","map","item","index","width","date_time","format"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Container, Row, Col, Form, Card } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport { useCookies } from 'react-cookie';\nimport { Redirect } from \"react-router-dom\";\n\nconst axios = require('axios');\nconst moment = require('moment');\n\nexport default function Tweet() {\n    const [cookies, setCookie, removeCookie] = useCookies(['userId']);\n    const [tweet, setTweet] = useState(\"\");\n    const [tweetList, setTweetList] = useState([{}]);\n        \n    const getList = () => {\n        axios.get('http://localhost:3005/tweets/user/' + cookies.userId)\n        .then((res) => {\n            if (res) {\n                setTweetList(res.data);\n            }\n        });       \n    }\n       \n    useEffect(() => {\n        getList();\n    }, []);\n\n    // Redirect if not logged in\n    if (!cookies.userId) {       \n        return <Redirect to=\"/login\" />\n    }\n\n    // When the value changes for the text area\n    const handleChange = (event) => {\n        setTweet(event && event.target.value ? event.target.value:\"\");\n    };\n\n    // Save tweet\n    const save = async () => {\n        if (tweet) { \n            axios.post('http://localhost:3005/tweets', {\n                user_id: cookies.userId,\n                content: tweet\n            })\n            .then(async (res) => {\n                await getList();\n                setTweet(null);\n            });\n        }       \n    }\n\n    // Remove tweet\n    const remove = async (id) => {\n        console.log(id)\n        axios.delete('http://localhost:3005/tweets/' + id)\n        .then(async (res) => {\n            await getList();\n        });\n    }    \n    \n    return (       \n        <Fragment>           \n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Tweet</title>\n            </Helmet>       \n            <Container>\n                <Row>            \n                    <Col>\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Tweet</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"3\" value={tweet || \"\"} onChange={handleChange} />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"button\" onClick={save}>\n                            Post tweet!\n                        </Button> \n                        <br/><br/>                    \n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <h2>Tweets</h2>                        \n                            {tweetList.length && tweetList.map((item, index) => {\n                                return (\n                                    <Card key={index} style={{ width: '18rem' }}>\n                                        <Card.Body>  \n                                            <Card.Subtitle className=\"mb-2 text-muted\">{moment(item.date_time).format('LLL')}</Card.Subtitle>                                 \n                                            <Card.Text>{item.content}</Card.Text>\n                                            <Button variant=\"danger\" size=\"sm\" data-id={item.id} onClick={() => remove(item.id)} >Delete</Button>\n                                        </Card.Body>\n                                    </Card>\n                                )\n                            })} \n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}