{"ast":null,"code":"var _jsxFileName = \"/Users/nadinalqarawi/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceLog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport img from '../images/police.jpeg';\nimport { Container, Form, Row, Col, Image, Button, InputGroup } from 'react-bootstrap';\nimport moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nexport default function EvidenceLog() {\n  _s();\n\n  //case ID\n  const [caseID, setCaseID] = useState([{}]);\n  useEffect(() => {\n    axios.get('http://localhost:3005/caseID').then(res => {\n      if (res) {\n        setCaseID(res.data);\n      }\n    });\n  }, []);\n\n  function onChangeText(event) {\n    //method for when caseID is entered\n    return event.target.value;\n  } //Evidence Type -- done select menu\n\n\n  const [ET, setET] = useState([{}]);\n\n  const getET = () => {\n    axios.get('http://localhost:3005/evidenceLog/ET/').then(res => {\n      if (res) {\n        setET(res.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog/ET').then(res => {\n      if (res) {\n        setET(res.data);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    getET();\n  }, []);\n\n  function onChangeET(onChangeET) //method for when evidenceType is selected\n  {\n    axios.get('http://localhost:3005/evidenceLog/ET/').then(res => {\n      if (res) {\n        setET(res.data);\n      }\n    });\n  } //date\n\n\n  moment(); // date = moment.toDate();\n  //time\n  //const time = moment.toTime();\n  //no of evidence collected\n\n  const [noOfEvidenceCollected, setNoOfEvidenceCollected] = useState([{}]);\n  useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog').then(res => {\n      if (res) {\n        setNoOfEvidenceCollected(res.data);\n      }\n    });\n  }, []);\n\n  function onChangeNumber(event) {\n    //method for when caseID is entered\n    return event.target.value;\n  } //description\n\n\n  const [description, setDescription] = useState([{}]);\n  useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog').then(res => {\n      if (res) {\n        setDescription(res.data);\n      }\n    });\n  }, []);\n\n  function onChangeEvidence(event) {\n    //method for when caseID is entered\n    return event.target.value;\n  } //log type -- done select menu\n\n\n  const [logType, setLogType] = useState([{}]);\n\n  const getLogType = () => {\n    axios.get('http://localhost:3005/evidenceLog/LT/').then(res => {\n      if (res) {\n        setLogType(res.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog/LT').then(res => {\n      if (res) {\n        setLogType(res.data);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    getLogType();\n  }, []);\n\n  function onChangeLT(onChangeLT) //method for when evidenceType is selected\n  {\n    axios.get('http://localhost:3005/evidenceLog/LT/').then(res => {\n      if (res) {\n        setLogType(res.data);\n      }\n    });\n  } //officerSIN\n\n\n  const [officerSIN, setOfficerSIN] = useState([{}]);\n\n  const getOfficerSIN = () => {\n    axios.get('http://localhost:3005/officer/officerSIN/').then(res => {\n      if (res) {\n        setOfficerSIN(res.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3005/officer/officerSIN').then(res => {\n      if (res) {\n        setOfficerSIN(res.data);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    getOfficerSIN();\n  }, []);\n\n  function onChangeOS(onChangeOS) //method for when officerSIN is inputed\n  {\n    axios.get('http://localhost:3005/officer/officerSIN/').then(res => {\n      if (res) {\n        setOfficerSIN(res.data);\n      }\n    });\n  } //submit button\n\n\n  function submit() {//console.log(selectedET, currentDate, currentTime, InputedNoOfEviCol, InputedDescription, selectedLogType, SelectedOfficerSIN, InputedCaseID);\n    //axios.post('http://localhost:3005/evidenceLog/addEvidence',{\n    //params: {\n    // ET: selectedET,\n    // cDate : currentDate,\n    // noOfEC : InputedNoOfEviCol,\n    // desc : InputedDescription,\n    // selectedLT : selectedLogType,\n    // offSIN : SelectedOfficerSIN,\n    // inputCI : InputedCaseID\n    //}      \n    //         }).then ((res) =>\n    //     {\n    //     if (res) {\n    // setOutput(res.data);\n    // console. log (output)\n    //     }\n    // });\n  } //viewing= get\n  //update= put\n  //adding new things = post\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Evidence Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter Case ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"case ID\",\n            onChange: onChangeText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select evidence type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select Evidence Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), ET.length && ET.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: item.evidenceType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select log type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select Log Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), logType.length && logType.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: item.logType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter Number of Evidence Collected \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"number collected\",\n          onChange: onChangeNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter Evidence Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter description\",\n          onChange: onChangeEvidence\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Log New Evidence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            class: \"btn btn-primary\",\n            onClick: (submit, onChangeET, onChangeLT),\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EvidenceLog, \"UUTjowlxVk88mF2xELtT+VKL9SI=\");\n\n_c = EvidenceLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"EvidenceLog\");","map":{"version":3,"sources":["/Users/nadinalqarawi/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceLog.jsx"],"names":["React","useState","useEffect","img","Container","Form","Row","Col","Image","Button","InputGroup","moment","axios","require","EvidenceLog","caseID","setCaseID","get","then","res","data","onChangeText","event","target","value","ET","setET","getET","onChangeET","noOfEvidenceCollected","setNoOfEvidenceCollected","onChangeNumber","description","setDescription","onChangeEvidence","logType","setLogType","getLogType","onChangeLT","officerSIN","setOfficerSIN","getOfficerSIN","onChangeOS","submit","length","map","item","index","evidenceType"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport img from '../images/police.jpeg';\nimport { Container, Form, Row, Col, Image, Button, InputGroup} from 'react-bootstrap';\nimport moment from 'react-moment';\n\nconst axios = require('axios');\n\nexport default function EvidenceLog () {\n\n//case ID\nconst [caseID, setCaseID] = useState([{}]);\n\n    useEffect(() => {\n        axios.get('http://localhost:3005/caseID')\n        .then((res) => {\n            if (res) {\n                setCaseID(res.data);\n            }\n    });\n }, []); \n\n function onChangeText (event){ //method for when caseID is entered\n    return(event.target.value);\n}\n\n //Evidence Type -- done select menu\n const [ET, setET] = useState([{}]);\n const getET = () => {\n     axios.get('http://localhost:3005/evidenceLog/ET/')\n     .then((res) => {\n         if (res) {\n             setET(res.data);\n         }\n     });       \n }\n    useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog/ET')\n    .then((res) => {\n        if (res) {\n            setET(res.data);\n        }\n});\n}, []); \nuseEffect(() => {\n    getET();\n}, []);\n\nfunction onChangeET(onChangeET) //method for when evidenceType is selected\n{\n    axios.get('http://localhost:3005/evidenceLog/ET/')\n    .then((res) => {\n        if (res) {\n            setET(res.data);\n        }\n    })\n}\n\n//date\nmoment();\n// date = moment.toDate();\n\n\n//time\n//const time = moment.toTime();\n\n//no of evidence collected\nconst [noOfEvidenceCollected, setNoOfEvidenceCollected] = useState([{}]);\nuseEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog')\n    .then((res) => {\n        if (res) {\n            setNoOfEvidenceCollected(res.data);\n        }\n});\n}, []); \n\nfunction onChangeNumber (event){ //method for when caseID is entered\nreturn(event.target.value);\n}\n//description\nconst [description, setDescription] = useState([{}]);\nuseEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog')\n    .then((res) => {\n        if (res) {\n            setDescription(res.data);\n        }\n});\n}, []); \n\nfunction onChangeEvidence (event){ //method for when caseID is entered\nreturn(event.target.value);}\n\n//log type -- done select menu\nconst [logType, setLogType] = useState([{}]);\nconst getLogType = () => {\n    axios.get('http://localhost:3005/evidenceLog/LT/')\n    .then((res) => {\n        if (res) {\n            setLogType(res.data);\n        }\n    });       \n}\n   useEffect(() => {\n   axios.get('http://localhost:3005/evidenceLog/LT')\n   .then((res) => {\n       if (res) {\n           setLogType(res.data);\n       }\n});\n}, []); \nuseEffect(() => {\n   getLogType();\n}, []);\nfunction onChangeLT(onChangeLT) //method for when evidenceType is selected\n{\n    axios.get('http://localhost:3005/evidenceLog/LT/')\n    .then((res) => {\n        if (res) {\n            setLogType(res.data);\n        }\n    })\n}\n\n//officerSIN\nconst [officerSIN, setOfficerSIN] = useState([{}]);\nconst getOfficerSIN = () => {\n    axios.get('http://localhost:3005/officer/officerSIN/')\n    .then((res) => {\n        if (res) {\n            setOfficerSIN(res.data);\n        }\n    });       \n}\n   useEffect(() => {\n   axios.get('http://localhost:3005/officer/officerSIN')\n   .then((res) => {\n       if (res) {\n           setOfficerSIN(res.data);\n       }\n});\n}, []); \nuseEffect(() => {\n   getOfficerSIN();\n}, []);\n\nfunction onChangeOS(onChangeOS) //method for when officerSIN is inputed\n{\n   axios.get('http://localhost:3005/officer/officerSIN/')\n   .then((res) => {\n       if (res) {\n           setOfficerSIN(res.data);\n       }\n   })\n}\n\n//submit button\nfunction submit()\n{\n    //console.log(selectedET, currentDate, currentTime, InputedNoOfEviCol, InputedDescription, selectedLogType, SelectedOfficerSIN, InputedCaseID);\n    //axios.post('http://localhost:3005/evidenceLog/addEvidence',{\n    //params: {\n    // ET: selectedET,\n    // cDate : currentDate,\n    // noOfEC : InputedNoOfEviCol,\n    // desc : InputedDescription,\n    // selectedLT : selectedLogType,\n    // offSIN : SelectedOfficerSIN,\n    // inputCI : InputedCaseID\n\n    //}      \n//         }).then ((res) =>\n//     {\n//     if (res) {\n// setOutput(res.data);\n// console. log (output)\n//     }\n// });\n}\n    //viewing= get\n    //update= put\n    //adding new things = post\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>Evidence Log</h1>\n                </Col>\n            </Row>\n            <Row>\n\t\t        <Col md={3}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Case ID</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"case ID\" onChange={onChangeText}/>\n                </Form.Group>\n                <Col md={1}>\n                </Col>\n                <Form>\n                <Form.Label>Select evidence type</Form.Label>\n                        <Form.Select as=\"select\">\n                            <option>Select Evidence Type</option>\n                            {ET.length && ET.map((item, index)=> (\n                                <option value={index}>{item.evidenceType}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col>\n                <Form>\n                <Form.Label>Select log type</Form.Label>\n                        <Form.Select as=\"select\">\n                            <option>Select Log Type</option>\n                            {logType.length && logType.map((item, index)=> (\n                                <option value={index}>{item.logType}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Number of Evidence Collected </Form.Label>\n                <Form.Control type=\"text\" placeholder=\"number collected\" onChange={onChangeNumber}/>\n                </Form.Group>\n                <Col md={6}>\n                </Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Evidence Description </Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter description\" onChange={onChangeEvidence}/>\n                </Form.Group>\n                <Col md={6}>\n                <Col md={3}>\n                    <h5>Log New Evidence</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit, onChangeET, onChangeLT}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n                   <Image src={img}/> \n                </Col>\n            </Row>\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}