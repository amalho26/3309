{"ast":null,"code":"var _jsxFileName = \"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function EvidenceTrends() {\n  _s();\n\n  const [Data, setData] = useState({});\n  const [station, setStation] = useState([{}]);\n  const [selectedStation, setSelectedStation] = useState();\n  const [output, setOutput] = useState();\n  let evidenceType = [];\n  let count = [];\n  var outputList;\n\n  function submit() {\n    axios.get('http://localhost:3005/trends/evidence/station', {\n      params: {\n        inputStation: selectedStation\n      }\n    }).then(res => {\n      if (res) {\n        console.log(res.data);\n        setOutput(res.data);\n        setData({\n          Data: {\n            labels: doThis(),\n            datasets: [{\n              label: \"Works\",\n              data: count,\n              borderColor: [\"#3cb371\"],\n              borderWidth: 1,\n              backgroundColor: [\"#3cb371\"]\n            }]\n          }\n        });\n\n        for (let i = 0; i <= res.data.length; i++) {\n          evidenceType[i] = res.data[i];\n          console.log(evidenceType[i]);\n        }\n      }\n    });\n  }\n\n  function doThis() {\n    for (let i = 0; i <= evidenceType.length; i++) {\n      evidenceType[i] && evidenceType[i].map(item => {\n        return item.evidenceType;\n      });\n    }\n  }\n\n  useEffect(() => {\n    axios.get('http://localhost:3005/trends/evidence/').then(res => {\n      if (res) {\n        setStation(res.data);\n      }\n    });\n  }, []);\n\n  function onChangeOption(event) {\n    setSelectedStation(Number(event.target.value) + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Evidence Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Select Station #\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-primary\",\n          onClick: submit,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            onChange: onChangeOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), station && station.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: item.stationNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EvidenceTrends, \"VHFOR2ZT4BLzJG2MLsk338lju/s=\");\n\n_c = EvidenceTrends;\n\nvar _c;\n\n$RefreshReg$(_c, \"EvidenceTrends\");","map":{"version":3,"sources":["/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx"],"names":["React","useState","useEffect","img","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","Container","Form","Row","Col","Image","Button","axios","require","register","EvidenceTrends","Data","setData","station","setStation","selectedStation","setSelectedStation","output","setOutput","evidenceType","count","outputList","submit","get","params","inputStation","then","res","console","log","data","labels","doThis","datasets","label","borderColor","borderWidth","backgroundColor","i","length","map","item","onChangeOption","event","Number","target","value","index","stationNo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button} from 'react-bootstrap';\n\nconst axios = require('axios');\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default function EvidenceTrends () {\n    const [Data, setData] = useState({});\n    const [station, setStation] = useState([{}]);\n    const [selectedStation, setSelectedStation] = useState();\n    const [output, setOutput] = useState();\n    \n    let evidenceType = [];\n    let count = [];\n    var outputList;\n\n\n    function submit() {\n        axios.get('http://localhost:3005/trends/evidence/station', {\n            params: {\n                inputStation: selectedStation\n            }\n        })\n            .then((res) => {\n                if (res) {\n                console.log(res.data)\n                setOutput(res.data);\n                \n                setData({\n                    Data: {\n                      labels: doThis(),\n                      datasets: [\n                        {\n                            label: \"Works\",\n                            data: count,\n                            borderColor: [\"#3cb371\"],\n                            borderWidth: 1,\n                            backgroundColor: [\"#3cb371\"]\n                        }\n                      ]\n                    }\n                  });\n                for (let i=0; i<=res.data.length; i++){\n                    evidenceType[i]=(res.data[i])\n                    console.log(evidenceType[i])\n                }\n\n\n                    \n\n\n                }\n            });\n\n    }\n    \n\n    function doThis () {\n        for (let i=0; i<=evidenceType.length; i++){\n        evidenceType[i]&&evidenceType[i].map ((item) => {\n            return item.evidenceType\n        })\n\n        }\n    }\n        \n    useEffect(() => {\n        axios.get('http://localhost:3005/trends/evidence/')\n            .then((res) => {\n                if (res) {\n                    setStation(res.data);\n                }\n            });\n    }, []);\n\n    \n    function onChangeOption (event) {\n        setSelectedStation((Number(event.target.value)+1));\n    }\n\n    return (\n        <Container fluid>\n            <Row>\n                \n                <Col md={6}>\n                    <h1>Evidence Trends</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <h5>Select Station #</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n\t\t        <Col md={3}>\n\t\t\t        <Form>\n                        <Form.Select as=\"select\" onChange={onChangeOption}>\n                            <option>Select...</option>\n                            {\n                            station && station.map((item, index)=> (\n                                <option value={index}>{item.stationNo}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n                {}\n            </Row>\n            \n        </Container>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}