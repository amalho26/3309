{"ast":null,"code":"var _jsxFileName = \"/Users/nadinalqarawi/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceLog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport img from '../images/police.jpeg';\nimport { Container, Form, Row, Col, Image, Button, InputGroup } from 'react-bootstrap';\nimport moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nexport default function EvidenceLog() {\n  _s();\n\n  //case ID\n  const [caseID, setCaseID] = useState([{}]);\n  useEffect(() => {\n    axios.get('http://localhost:3005/caseID').then(res => {\n      if (res) {\n        setCaseID(res.data);\n      }\n    });\n  }, []);\n\n  function onChangeText(event) {\n    //method for when caseID is entered\n    return event.target.value;\n  }\n\n  function submit() {\n    console.log(selectedET, currentDate, currentTime, InputedNoOfEviCol, InputedDescription, selectedLogType, SelectedOfficerSIN, InputedCaseID);\n    axios.post('http://localhost:3005/evidenceLog/addEvidence', {\n      params: {\n        ET: selectedET,\n        cDate: currentDate,\n        noOfEC: InputedNoOfEviCol,\n        desc: InputedDescription,\n        selectedLT: selectedLogType,\n        offSIN: SelectedOfficerSIN,\n        inputCI: InputedCaseID\n      }\n    }).then(res => {\n      if (res) {\n        setOutput(res.data);\n        console.log(output);\n      }\n    });\n  } //Evidence Type\n\n\n  const [ET, setET] = useState([{}]);\n\n  const getET = () => {\n    axios.get('http://localhost:3005/evidenceLog/ET/').then(res => {\n      if (res) {\n        setET(res.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog/ET').then(res => {\n      if (res) {\n        setET(res.data);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    getET();\n  }, []);\n\n  function onChangeET(onChangeET) //method for when evidenceType is selected\n  {\n    axios.get('http://localhost:3005/evidenceLog/ET/').then(res => {\n      if (res) {\n        setET(res.data);\n      }\n    });\n  } //date\n\n\n  function setDate() {\n    date = moment('[current date]').isSameOrAfter(moment());\n    console.log(date);\n  } //time\n  //no of evidence collected\n\n\n  const [noOfEvidenceCollected, setNoOfEvidenceCollected] = useState([{}]); //description\n\n  const [description, setDescription] = useState([{}]); //log type\n\n  const [logType, setLogType] = useState([{}]);\n\n  const getLogType = () => {\n    axios.get('http://localhost:3005/evidenceLog/LT/').then(res => {\n      if (res) {\n        setLT(res.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog/LT').then(res => {\n      if (res) {\n        setLT(res.data);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    getLT();\n  }, []);\n\n  function onChangeLT(onChangeLT) //method for when evidenceType is selected\n  {\n    axios.get('http://localhost:3005/evidenceLog/LT/').then(res => {\n      if (res) {\n        setLT(res.data);\n      }\n    });\n  } //officerSIN\n\n\n  const [officerSIN, setOfficerSIN] = useState([{}]);\n\n  const getOfficerSIN = () => {\n    axios.get('http://localhost:3005/officer/officerSIN/').then(res => {\n      if (res) {\n        setOfficerSIN(res.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3005/officer/officerSIN').then(res => {\n      if (res) {\n        setOfficerSIN(res.data);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    getOfficerSIN();\n  }, []);\n\n  function onChangeOS(onChangeOS) //method for when officerSIN is inputed\n  {\n    axios.get('http://localhost:3005/officer/officerSIN/').then(res => {\n      if (res) {\n        setOfficerSIN(res.data);\n      }\n    });\n  } //viewing= get\n  //update= put\n  //adding new things = post\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Evidence Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter Case ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"case ID\",\n            onChange: onChangeText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select evidence type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), ET.length && ET.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: item.evidenceType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select log type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), logType.length && logType.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: item.logType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Log New Evidence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            class: \"btn btn-primary\",\n            onClick: (submit, onChangeET, onChangeLT),\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EvidenceLog, \"YG9CId6Bx2vB6Quw/Y9MSTh5JBI=\");\n\n_c = EvidenceLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"EvidenceLog\");","map":{"version":3,"sources":["/Users/nadinalqarawi/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceLog.jsx"],"names":["React","useState","useEffect","img","Container","Form","Row","Col","Image","Button","InputGroup","moment","axios","require","EvidenceLog","caseID","setCaseID","get","then","res","data","onChangeText","event","target","value","submit","console","log","selectedET","currentDate","currentTime","InputedNoOfEviCol","InputedDescription","selectedLogType","SelectedOfficerSIN","InputedCaseID","post","params","ET","cDate","noOfEC","desc","selectedLT","offSIN","inputCI","setOutput","output","setET","getET","onChangeET","setDate","date","isSameOrAfter","noOfEvidenceCollected","setNoOfEvidenceCollected","description","setDescription","logType","setLogType","getLogType","setLT","getLT","onChangeLT","officerSIN","setOfficerSIN","getOfficerSIN","onChangeOS","length","map","item","index","evidenceType"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport img from '../images/police.jpeg';\nimport { Container, Form, Row, Col, Image, Button, InputGroup} from 'react-bootstrap';\nimport moment from 'react-moment';\n\nconst axios = require('axios');\n\nexport default function EvidenceLog () {\n\n    //case ID\n    const [caseID, setCaseID] = useState([{}]);\n\n    useEffect(() => {\n        axios.get('http://localhost:3005/caseID')\n        .then((res) => {\n            if (res) {\n                setCaseID(res.data);\n            }\n    });\n }, []); \n\n function onChangeText (event){ //method for when caseID is entered\n    return(event.target.value);\n}\n\nfunction submit()\n{\n    console.log(selectedET, currentDate, currentTime, InputedNoOfEviCol, InputedDescription, selectedLogType, SelectedOfficerSIN, InputedCaseID);\n    axios.post('http://localhost:3005/evidenceLog/addEvidence',{\n    params: {\n    ET: selectedET,\n    cDate : currentDate,\n    noOfEC : InputedNoOfEviCol,\n    desc : InputedDescription,\n    selectedLT : selectedLogType,\n    offSIN : SelectedOfficerSIN,\n    inputCI : InputedCaseID\n\n    }      \n        }).then ((res) =>\n    {\n    if (res) {\nsetOutput(res.data);\nconsole. log (output)\n    }\n});\n}\n\n\n //Evidence Type\n const [ET, setET] = useState([{}]);\n const getET = () => {\n     axios.get('http://localhost:3005/evidenceLog/ET/')\n     .then((res) => {\n         if (res) {\n             setET(res.data);\n         }\n     });       \n }\n    useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog/ET')\n    .then((res) => {\n        if (res) {\n            setET(res.data);\n        }\n});\n}, []); \nuseEffect(() => {\n    getET();\n}, []);\n\nfunction onChangeET(onChangeET) //method for when evidenceType is selected\n{\n    axios.get('http://localhost:3005/evidenceLog/ET/')\n    .then((res) => {\n        if (res) {\n            setET(res.data);\n        }\n    })\n}\n\n//date\nfunction setDate(){\n    date = moment('[current date]').isSameOrAfter(moment());\n    console.log(date);\n}\n\n\n//time\n\n//no of evidence collected\nconst [noOfEvidenceCollected, setNoOfEvidenceCollected] = useState([{}]);\n\n//description\nconst [description, setDescription] = useState([{}]);\n\n//log type\nconst [logType, setLogType] = useState([{}]);\nconst getLogType = () => {\n    axios.get('http://localhost:3005/evidenceLog/LT/')\n    .then((res) => {\n        if (res) {\n            setLT(res.data);\n        }\n    });       \n}\n   useEffect(() => {\n   axios.get('http://localhost:3005/evidenceLog/LT')\n   .then((res) => {\n       if (res) {\n           setLT(res.data);\n       }\n});\n}, []); \nuseEffect(() => {\n   getLT();\n}, []);\nfunction onChangeLT(onChangeLT) //method for when evidenceType is selected\n{\n    axios.get('http://localhost:3005/evidenceLog/LT/')\n    .then((res) => {\n        if (res) {\n            setLT(res.data);\n        }\n    })\n}\n\n//officerSIN\nconst [officerSIN, setOfficerSIN] = useState([{}]);\nconst getOfficerSIN = () => {\n    axios.get('http://localhost:3005/officer/officerSIN/')\n    .then((res) => {\n        if (res) {\n            setOfficerSIN(res.data);\n        }\n    });       \n}\n   useEffect(() => {\n   axios.get('http://localhost:3005/officer/officerSIN')\n   .then((res) => {\n       if (res) {\n           setOfficerSIN(res.data);\n       }\n});\n}, []); \nuseEffect(() => {\n   getOfficerSIN();\n}, []);\n\nfunction onChangeOS(onChangeOS) //method for when officerSIN is inputed\n{\n   axios.get('http://localhost:3005/officer/officerSIN/')\n   .then((res) => {\n       if (res) {\n           setOfficerSIN(res.data);\n       }\n   })\n}\n    //viewing= get\n    //update= put\n    //adding new things = post\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>Evidence Log</h1>\n                </Col>\n            </Row>\n            <Row>\n\t\t        <Col md={3}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Case ID</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"case ID\" onChange={onChangeText}/>\n                </Form.Group>\n                <Col md={1}>\n                </Col>\n                <Form>\n                <Form.Label>Select evidence type</Form.Label>\n                        <Form.Select as=\"select\">\n                            <option>Select...</option>\n                            {ET.length && ET.map((item, index)=> (\n                                <option value={index}>{item.evidenceType}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col>\n                <Form>\n                <Form.Label>Select log type</Form.Label>\n                        <Form.Select as=\"select\">\n                            <option>Select...</option>\n                            {logType.length && logType.map((item, index)=> (\n                                <option value={index}>{item.logType}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                <Col md={3}>\n                    <h5>Log New Evidence</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit, onChangeET, onChangeLT}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n                   <Image src={img}/> \n                </Col>\n            </Row>\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}