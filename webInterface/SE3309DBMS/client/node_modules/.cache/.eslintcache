[{"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/index.js":"1","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/App.js":"2","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/conf/routes.js":"3","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Home.jsx":"4","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/css/Home.js":"5","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Login.jsx":"6","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/css/Login.js":"7","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/CrimeTrends.jsx":"8","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx":"9","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceLog.jsx":"10","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Reports.jsx":"11","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Witness.jsx":"12"},{"size":267,"mtime":1638404087348,"results":"13","hashOfConfig":"14"},{"size":3305,"mtime":1638930780267,"results":"15","hashOfConfig":"14"},{"size":797,"mtime":1638929869376,"results":"16","hashOfConfig":"14"},{"size":400,"mtime":1638485421020,"results":"17","hashOfConfig":"14"},{"size":1121,"mtime":1638487225008,"results":"18","hashOfConfig":"14"},{"size":5364,"mtime":1638921782215,"results":"19","hashOfConfig":"14"},{"size":1956,"mtime":1638487289834,"results":"20","hashOfConfig":"14"},{"size":3693,"mtime":1638921784019,"results":"21","hashOfConfig":"14"},{"size":3564,"mtime":1638837889465,"results":"22","hashOfConfig":"14"},{"size":6823,"mtime":1638842125153,"results":"23","hashOfConfig":"14"},{"size":8375,"mtime":1638932930625,"results":"24","hashOfConfig":"14"},{"size":3645,"mtime":1638929766486,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"irul6s",{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/index.js",[],["57","58"],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/App.js",["59","60","61","62","63","64"],"import React, { Fragment, useEffect } from 'react';\nimport useState from 'react-usestateref';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/App.css';\nimport routes from './conf/routes';\nconst axios = require('axios');\n\nfunction App() {\n   \n    const [cookies, setCookie, removeCookie] = useCookies(['userId']);\n    const [fName, setFName, fNameRef] = useState();\n    const [lName, setLName, lNameRef] = useState();\n\n\n    \n    if (cookies && cookies.userId) {\n        setCookie('userId', cookies.userId, {\n            path: '/home',\n            maxAge: process.env.REACT_APP_ENV_COOKIES_MAX_AGE\n        });\n    }\n\n    useEffect(() => {\n        axios.get('http://localhost:3005/authenticate/name', {\n            params: {\n                id: cookies.userId\n            }\n        })\n        .then((res) => {\n            if (res) {\n                res.data&&res.data.map((record) =>{\n                    setFName(record.fname);\n                    setLName(record.lname);\n                });\n                \n            }\n        });    \n    }, []);\n\n    function isLoggedIn() {\n            if (cookies.userId == 'undefined' || !cookies.userId)\n                return false;\n            else \n                return true;      \n    }\n\n    return (\n        <BrowserRouter>\n        <Navbar>\n            <Container>\n                <Navbar.Brand href=\"/home\">\n                    <AiOutlineHome size=\"2rem\" />\n                </Navbar.Brand>\n                {isLoggedIn() ?\n                <Navbar.Collapse className=\"justify-content-end\">\n                <Nav className=\"ms-auto\">\n                    <Nav.Link href=\"/reports\">Reports</Nav.Link>\n                    <NavDropdown title=\"Trends\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"/trends/crime\">Crime Trends</NavDropdown.Item>\n                        <NavDropdown.Item href=\"/trends/evidence\">Evidence Trends</NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href=\"/evidenceLog\">Evidence</Nav.Link>\n                    <Nav.Link href=\"/Witness\">Witness Statements</Nav.Link>\n                    <NavDropdown title={`Signed in as: ${fName + \" \" + lName}`} id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item onClick={() => {\n                            console.log(cookies.userId)\n                                removeCookie('userId', { path: '/home' });\n                            }}>Logout</NavDropdown.Item>\n                    </NavDropdown>\n                   \n                </Nav>\n                </Navbar.Collapse>\n                :\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Nav.Link href=\"/login\">Log In</Nav.Link>\n                </Navbar.Collapse>\n                }\n            </Container>\n        </Navbar>\n        <Fragment>\n            {routes.map( ({ path, component, name}) => {\n                return <Route exact path={path} key={name} component={component} />\n            })}\n        </Fragment>\n            \n        </BrowserRouter>\n    );\n}\n\nexport default App;","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/conf/routes.js",[],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Home.jsx",["65","66"],"import React from 'react';\nimport Image from '../images/police.jpeg';\nimport {Section, HeroBg, HeroContent, SectionText, ImageBg} from '../css/Home';\n\nexport default function Home () {\n\n    return (\n        <Section>\n            <ImageBg/>\n            <HeroContent>\n                <SectionText>Police Database<br/>Management System</SectionText>\n            </HeroContent>\n        </Section>\n    )\n}","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/css/Home.js",[],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Login.jsx",[],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/css/Login.js",[],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/CrimeTrends.jsx",["67","68","69","70","71"],"import React, {useEffect} from 'react';\nimport useState from 'react-usestateref'\nimport img from '../images/police.jpeg';\nimport { useCookies } from 'react-cookie';\nimport { Redirect } from \"react-router-dom\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button} from 'react-bootstrap';\n\nconst axios = require('axios');\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default function CrimeTrends () {\n    const [cookies, setCookie, removeCookie] = useCookies(['userId']);\n    const [selectedCity, setSelectedCity] = useState();\n    const [displayChart, setDisplayChart]= useState(false);\n    const[crimeType, setCrimeType, crimeTypeRef] = useState();\n    const[count, setCount, countRef] = useState();\n    ChartJS.register(ArcElement, Tooltip, Legend);\n    let c = [];\n    const cr = [];\n\n    \n    const [city, setCity] = useState([{}]);\n\n    const getCity = () => {\n        axios.get('http://localhost:3005/trends/crime/')\n        .then((res) => {\n            if (res) {\n                setCity(res.data);\n            }\n        });       \n    }\n    \n    const chartData = {\n        labels: crimeTypeRef.current,\n        datasets: [\n            {\n            label: 'Crime',\n            data: countRef.current,\n            backgroundColor: ['red', 'blue', 'yellow', 'white', 'brown', 'green', 'purple', 'orange', 'black', 'grey'],\n            borderColor: ['rgba(255, 159, 64, 1)', ],\n            borderWidth: 1,\n            },\n        ],\n        };\n\n    function submit() {\n        console.log(selectedCity)\n        axios.get('http://localhost:3005/trends/crime/city', {\n            params: {\n                inputCity: JSON.stringify(selectedCity)\n            }\n            \n        })\n            .then((res) => {\n                if (res) {\n                console.log(res.data)\n                res.data&&res.data.map((record) =>{\n                    cr.push(record.Crime);\n                    c.push(record.Occurance);\n                });\n\n                setCrimeType(cr)\n                setCount(c)\n                console.log(crimeTypeRef.current)\n                console.log(countRef.current)\n                setDisplayChart(true);\n                \n                }\n            });\n\n    }\n\n    function onChangeOption (event) {\n        setSelectedCity(event.target.value);\n        console.log(event.target.value)\n    }\n\n    useEffect(() => {\n        getCity();\n    }, []);\n\n    if (!cookies.userId) {       \n        return <Redirect to=\"/login\" />\n    }\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>Crime Trends</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <h5>Select City</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n\t\t        <Col md={3}>\n\t\t\t        <Form>\n                        <Form.Select as=\"select\" onChange={onChangeOption}>\n                            <option>Select...</option>\n                            {city.length && city.map((item)=> (\n                                <option value={item.city}>{item.city}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n            </Row>\n            {displayChart? \n                <Pie data={chartData} />\n                :\n                null\n            }\n        </Container>\n    )\n}","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx",["72","73","74"],"import React, {useEffect} from 'react';\nimport useState from 'react-usestateref'\nimport img from '../images/police.jpeg';\nimport {Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend} from 'chart.js';\n  import { Bar } from 'react-chartjs-2';\n\nimport { Container, Form, Row, Col, Image, Button} from 'react-bootstrap';\n\nconst axios = require('axios');\n\n\nexport default function EvidenceTrends () {\n    const [station, setStation] = useState([{}]);\n    const [selectedStation, setSelectedStation] = useState();\n    const [displayChart, setDisplayChart]= useState(false);\n    const[evidenceType, setEvidenceType, evidenceTypeRef] = useState();\n    const[count, setCount, countRef] = useState();\n    ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);\n    let c = [];\n    const e = [];\n\n    function submit() {\n        axios.get('http://localhost:3005/trends/evidence/station', {\n            params: {\n                inputStation: selectedStation\n            }\n        })\n            .then((res) => {\n                if (res) {\n                console.log(res.data)\n                res.data&&res.data.map((record) =>{\n                    e.push(record.evidenceType);\n                    c.push(record.count);\n                });\n\n                setEvidenceType(e)\n                setCount(c)\n                console.log(evidenceTypeRef.current)\n                console.log(countRef.current)\n                setDisplayChart(true);\n                \n                }\n            });\n\n    }\n     \n    useEffect(() => {\n        axios.get('http://localhost:3005/trends/evidence/')\n            .then((res) => {\n                if (res) {\n                    setStation(res.data);\n                }\n            });\n    }, []);\n\n    \n    function onChangeOption (event) {\n        setSelectedStation((Number(event.target.value)+1));\n    }\n    \n    const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top',\n          },\n          title: {\n            display: true,\n            text: 'Evidence',\n          },\n        },\n    };\n      \n\n\n    const chartData = {\n\n        labels: evidenceTypeRef.current,\n        datasets: [\n            {\n            label: 'Occurance',\n            data: countRef.current,\n            backgroundColor: 'green',\n            },\n        ],\n\n    \n    };\n  \n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>Evidence Trends</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <h5>Select Station #</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n\t\t        <Col md={3}>\n\t\t\t        <Form>\n                        <Form.Select as=\"select\" onChange={onChangeOption}>\n                            <option>Select...</option>\n                            {\n                            station && station.map((item, index)=> (\n                                <option value={index}>{item.stationNo}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n                {}\n            </Row>\n            {displayChart? \n                <Bar options={options} data={chartData} />\n                :\n                null\n            }\n        </Container>\n    )\n}","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceLog.jsx",["75","76","77","78","79","80","81","82"],"import React, {useState, useEffect} from 'react';\nimport img from '../images/police.jpeg';\nimport { Container, Form, Row, Col, Image, Button, InputGroup} from 'react-bootstrap';\nimport moment from 'moment';\n\nconst axios = require('axios');\n\nexport default function EvidenceLog () {\n\n//case ID\nconst [caseID, setCaseID] = useState([{}]);\n\n    useEffect(() => {\n        axios.get('http://localhost:3005/caseID')\n        .then((res) => {\n            if (res) {\n                setCaseID(res.data);\n            }\n    });\n }, []); \n\n function onChangeText (event){ //method for when caseID is entered\n    return(event.target.value);\n}\n\n //Evidence Type -- done select menu\n const [ET, setET] = useState([{}]);\n const getET = () => {\n     axios.get('http://localhost:3005/evidenceLog/ET/')\n     .then((res) => {\n         if (res) {\n             setET(res.data);\n         }\n     });       \n }\n    useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog/ET')\n    .then((res) => {\n        if (res) {\n            setET(res.data);\n        }\n});\n}, []); \nuseEffect(() => {\n    getET();\n}, []);\n\nfunction onChangeET(onChangeET) //method for when evidenceType is selected\n{\n    axios.get('http://localhost:3005/evidenceLog/ET/')\n    .then((res) => {\n        if (res) {\n            setET(res.data);\n        }\n    })\n}\n\n//date\n\n// date = moment.toDate();\n\n\n//time\n//const time = moment.toTime();\n\n//no of evidence collected\nconst [noOfEvidenceCollected, setNoOfEvidenceCollected] = useState([{}]);\nuseEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog')\n    .then((res) => {\n        if (res) {\n            setNoOfEvidenceCollected(res.data);\n        }\n});\n}, []); \n\nfunction onChangeNumber (event){ //method for when caseID is entered\nreturn(event.target.value);\n}\n//description\nconst [description, setDescription] = useState([{}]);\nuseEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog')\n    .then((res) => {\n        if (res) {\n            setDescription(res.data);\n        }\n});\n}, []); \n\nfunction onChangeEvidence (event){ //method for when caseID is entered\nreturn(event.target.value);}\n\n//log type -- done select menu\nconst [logType, setLogType] = useState([{}]);\nconst getLogType = () => {\n    axios.get('http://localhost:3005/evidenceLog/LT/')\n    .then((res) => {\n        if (res) {\n            setLogType(res.data);\n        }\n    });       \n}\n   useEffect(() => {\n   axios.get('http://localhost:3005/evidenceLog/LT')\n   .then((res) => {\n       if (res) {\n           setLogType(res.data);\n       }\n});\n}, []); \nuseEffect(() => {\n   getLogType();\n}, []);\nfunction onChangeLT(onChangeLT) //method for when evidenceType is selected\n{\n    axios.get('http://localhost:3005/evidenceLog/LT/')\n    .then((res) => {\n        if (res) {\n            setLogType(res.data);\n        }\n    })\n}\n\n//officerSIN\nconst [officerSIN, setOfficerSIN] = useState([{}]);\nconst getOfficerSIN = () => {\n    axios.get('http://localhost:3005/officer/officerSIN/')\n    .then((res) => {\n        if (res) {\n            setOfficerSIN(res.data);\n        }\n    });       \n}\n   useEffect(() => {\n   axios.get('http://localhost:3005/officer/officerSIN')\n   .then((res) => {\n       if (res) {\n           setOfficerSIN(res.data);\n       }\n});\n}, []); \nuseEffect(() => {\n   getOfficerSIN();\n}, []);\n\nfunction onChangeOS(onChangeOS) //method for when officerSIN is inputed\n{\n   axios.get('http://localhost:3005/officer/officerSIN/')\n   .then((res) => {\n       if (res) {\n           setOfficerSIN(res.data);\n       }\n   })\n}\n\n//submit button\nfunction submit()\n{\n    let currentDate = new Date();\n    console.log(moment(currentDate).format('YYYY-MM-DD'));\n    console.log(moment(currentDate).format('hh:mm:ss'));\n    //console.log(selectedET, currentDate, currentTime, InputedNoOfEviCol, InputedDescription, selectedLogType, SelectedOfficerSIN, InputedCaseID);\n    //axios.post('http://localhost:3005/evidenceLog/addEvidence',{\n    //params: {\n    // ET: selectedET,\n    // cDate : currentDate,\n    // noOfEC : InputedNoOfEviCol,\n    // desc : InputedDescription,\n    // selectedLT : selectedLogType,\n    // offSIN : SelectedOfficerSIN,\n    // inputCI : InputedCaseID\n\n    //}      \n//         }).then ((res) =>\n//     {\n//     if (res) {\n// setOutput(res.data);\n// console. log (output)\n//     }\n// });\n//\n}\n    //viewing= get\n    //update= put\n    //adding new things = post\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>Evidence Log</h1>\n                </Col>\n            </Row>\n            <Row>\n\t\t        <Col md={3}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Case ID</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"case ID\" onChange={onChangeText}/>\n                </Form.Group>\n                <Col md={1}>\n                </Col>\n                <Form>\n                <Form.Label>Select evidence type</Form.Label>\n                        <Form.Select as=\"select\">\n                            <option>Select Evidence Type</option>\n                            {ET.length && ET.map((item, index)=> (\n                                <option value={index}>{item.evidenceType}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col>\n                <Form>\n                <Form.Label>Select log type</Form.Label>\n                        <Form.Select as=\"select\">\n                            <option>Select Log Type</option>\n                            {logType.length && logType.map((item, index)=> (\n                                <option value={index}>{item.logType}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Number of Evidence Collected </Form.Label>\n                <Form.Control type=\"text\" placeholder=\"number collected\" onChange={onChangeNumber}/>\n                </Form.Group>\n                <Col md={6}>\n                </Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Evidence Description </Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter description\" onChange={onChangeEvidence}/>\n                </Form.Group>\n                <Col md={6}>\n                <Col md={3}>\n                    <h5>Log New Evidence</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n                   <Image src={img}/> \n                </Col>\n            </Row>\n        </Container>\n    )\n}","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Reports.jsx",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Witness.jsx",["102","103","104","105","106"],"import React, {useEffect} from 'react';\nimport useState from 'react-usestateref'\nimport img from '../images/police.jpeg';\nimport { Container, Form, Row, Col, Image, Button, InputGroup} from 'react-bootstrap';\n\n\nconst axios = require('axios');\n\n// function of witness:\n//creating a view for the number of witness statements that a specific criminal has made\n\nexport default function Witness() {\n\n//first name\nconst [fname, setFname] = useState([{}]);\nconst [insertedFname, setInsertedFname, fnameRef] = useState();\nuseEffect(() => {\n    setFname();\n}, []);\n\n function onChangeTextF (event){ //method for when caseID is entered to view report\n    setInsertedFname(JSON.stringify(event.target.value));\n}\n\n//last name\nconst [lname, setLname] = useState([{}]);\nconst [insertedLname, setInsertedLname, lnameRef] = useState();\nuseEffect(() => {\n    setLname();\n}, []);\n\n function onChangeTextL (event){ //method for when caseID is entered to view report\n    setInsertedLname(JSON.stringify(event.target.value));\n}\n\n//function to drop view\nfunction dropView(){\n    axios.delete('http://localhost:3005/witnessStatements/drop').then((res) => {\n        if (res) {\n        console.log(res.data);\n        console.log(\"server response!\");\n        }\n        else\n        console.log(\"no response from server!\");\n    });\n}\n\n\n//function to view report\nfunction viewStatements(){\n    console.log(insertedFname);\n    console.log(insertedLname);\n\n    axios.get('http://localhost:3005/witnessStatements/view/',{\n    }).then((res) => {\n        if (res) {\n        console.log(res.data);\n        console.log(\"server response!\");\n        }\n        else\n        console.log(\"no response from server!\");\n    });\n}\n\n//function to view report\nfunction createView(){\n    console.log(insertedFname);\n    console.log(insertedLname);\n\n    axios.post('http://localhost:3005/witnessStatements/create/',{\n        \n            fName : insertedFname,\n            lName : insertedLname\n        \n    }).then((res) => {\n        if (res) {\n        console.log(res.data);\n        console.log(\"server response!\");\n        }\n        else\n        console.log(\"no response from server!\");\n    });\n}\n\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>View the number of witness statements that criminal has made</h1>\n                </Col>\n            </Row>\n            <Row>\n            <Col md={3}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter First Name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"First Name\" onChange={onChangeTextF}/>\n                </Form.Group>\n                </Col>\n                <Col md={3}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Last Name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Last Name\" onChange={onChangeTextL}/>\n                </Form.Group>\n                </Col>\n            <Col md={6}>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={createView}>\n                        Create Data\n\t\t\t\t    </Button>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={viewStatements}>\n                        View Number of Statements\n\t\t\t\t    </Button>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={dropView}>\n                        Drop the previous search\n\t\t\t\t    </Button>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n            </Row>\n        </Container>\n    )\n}",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":4,"column":32,"nodeType":"113","messageId":"114","endLine":4,"endColumn":40},{"ruleId":"111","severity":1,"message":"115","line":15,"column":29,"nodeType":"113","messageId":"114","endLine":15,"endColumn":37},{"ruleId":"111","severity":1,"message":"116","line":16,"column":29,"nodeType":"113","messageId":"114","endLine":16,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":35,"column":49,"nodeType":"119","messageId":"120","endLine":35,"endColumn":51},{"ruleId":"121","severity":1,"message":"122","line":42,"column":8,"nodeType":"123","endLine":42,"endColumn":10,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":45,"column":32,"nodeType":"127","messageId":"128","endLine":45,"endColumn":34},{"ruleId":"111","severity":1,"message":"129","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":13},{"ruleId":"111","severity":1,"message":"130","line":3,"column":18,"nodeType":"113","messageId":"114","endLine":3,"endColumn":24},{"ruleId":"111","severity":1,"message":"131","line":14,"column":21,"nodeType":"113","messageId":"114","endLine":14,"endColumn":30},{"ruleId":"111","severity":1,"message":"132","line":14,"column":32,"nodeType":"113","messageId":"114","endLine":14,"endColumn":44},{"ruleId":"111","severity":1,"message":"133","line":17,"column":11,"nodeType":"113","messageId":"114","endLine":17,"endColumn":20},{"ruleId":"111","severity":1,"message":"134","line":18,"column":11,"nodeType":"113","messageId":"114","endLine":18,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":59,"column":49,"nodeType":"119","messageId":"120","endLine":59,"endColumn":51},{"ruleId":"111","severity":1,"message":"135","line":16,"column":11,"nodeType":"113","messageId":"114","endLine":16,"endColumn":23},{"ruleId":"111","severity":1,"message":"134","line":17,"column":11,"nodeType":"113","messageId":"114","endLine":17,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":31,"column":49,"nodeType":"119","messageId":"120","endLine":31,"endColumn":51},{"ruleId":"111","severity":1,"message":"136","line":3,"column":52,"nodeType":"113","messageId":"114","endLine":3,"endColumn":62},{"ruleId":"111","severity":1,"message":"137","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":14},{"ruleId":"111","severity":1,"message":"138","line":48,"column":10,"nodeType":"113","messageId":"114","endLine":48,"endColumn":20},{"ruleId":"111","severity":1,"message":"139","line":67,"column":8,"nodeType":"113","messageId":"114","endLine":67,"endColumn":29},{"ruleId":"111","severity":1,"message":"140","line":81,"column":8,"nodeType":"113","messageId":"114","endLine":81,"endColumn":19},{"ruleId":"111","severity":1,"message":"141","line":115,"column":10,"nodeType":"113","messageId":"114","endLine":115,"endColumn":20},{"ruleId":"111","severity":1,"message":"142","line":126,"column":8,"nodeType":"113","messageId":"114","endLine":126,"endColumn":18},{"ruleId":"111","severity":1,"message":"143","line":147,"column":10,"nodeType":"113","messageId":"114","endLine":147,"endColumn":20},{"ruleId":"111","severity":1,"message":"136","line":5,"column":52,"nodeType":"113","messageId":"114","endLine":5,"endColumn":62},{"ruleId":"111","severity":1,"message":"131","line":16,"column":21,"nodeType":"113","messageId":"114","endLine":16,"endColumn":30},{"ruleId":"111","severity":1,"message":"132","line":16,"column":32,"nodeType":"113","messageId":"114","endLine":16,"endColumn":44},{"ruleId":"117","severity":1,"message":"118","line":28,"column":49,"nodeType":"119","messageId":"120","endLine":28,"endColumn":51},{"ruleId":"121","severity":1,"message":"144","line":34,"column":8,"nodeType":"123","endLine":34,"endColumn":10,"suggestions":"145"},{"ruleId":"111","severity":1,"message":"137","line":37,"column":8,"nodeType":"113","messageId":"114","endLine":37,"endColumn":14},{"ruleId":"111","severity":1,"message":"146","line":38,"column":43,"nodeType":"113","messageId":"114","endLine":38,"endColumn":52},{"ruleId":"111","severity":1,"message":"147","line":55,"column":38,"nodeType":"113","messageId":"114","endLine":55,"endColumn":52},{"ruleId":"111","severity":1,"message":"148","line":62,"column":37,"nodeType":"113","messageId":"114","endLine":62,"endColumn":44},{"ruleId":"111","severity":1,"message":"149","line":71,"column":39,"nodeType":"113","messageId":"114","endLine":71,"endColumn":46},{"ruleId":"111","severity":1,"message":"150","line":82,"column":8,"nodeType":"113","messageId":"114","endLine":82,"endColumn":15},{"ruleId":"111","severity":1,"message":"151","line":83,"column":8,"nodeType":"113","messageId":"114","endLine":83,"endColumn":13},{"ruleId":"111","severity":1,"message":"152","line":84,"column":8,"nodeType":"113","messageId":"114","endLine":84,"endColumn":16},{"ruleId":"111","severity":1,"message":"153","line":85,"column":8,"nodeType":"113","messageId":"114","endLine":85,"endColumn":13},{"ruleId":"111","severity":1,"message":"154","line":86,"column":8,"nodeType":"113","messageId":"114","endLine":86,"endColumn":13},{"ruleId":"111","severity":1,"message":"155","line":101,"column":35,"nodeType":"113","messageId":"114","endLine":101,"endColumn":45},{"ruleId":"121","severity":1,"message":"156","line":117,"column":4,"nodeType":"123","endLine":117,"endColumn":6,"suggestions":"157"},{"ruleId":"121","severity":1,"message":"158","line":120,"column":4,"nodeType":"123","endLine":120,"endColumn":6,"suggestions":"159"},{"ruleId":"117","severity":1,"message":"118","line":143,"column":45,"nodeType":"119","messageId":"120","endLine":143,"endColumn":47},{"ruleId":"111","severity":1,"message":"136","line":4,"column":52,"nodeType":"113","messageId":"114","endLine":4,"endColumn":62},{"ruleId":"111","severity":1,"message":"160","line":15,"column":8,"nodeType":"113","messageId":"114","endLine":15,"endColumn":13},{"ruleId":"111","severity":1,"message":"161","line":16,"column":41,"nodeType":"113","messageId":"114","endLine":16,"endColumn":49},{"ruleId":"111","severity":1,"message":"162","line":26,"column":8,"nodeType":"113","messageId":"114","endLine":26,"endColumn":13},{"ruleId":"111","severity":1,"message":"163","line":27,"column":41,"nodeType":"113","messageId":"114","endLine":27,"endColumn":49},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'fNameRef' is assigned a value but never used.","'lNameRef' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.userId', 'setFName', and 'setLName'. Either include them or remove the dependency array.","ArrayExpression",["166"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Image' is defined but never used.","'HeroBg' is defined but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'crimeType' is assigned a value but never used.","'count' is assigned a value but never used.","'evidenceType' is assigned a value but never used.","'InputGroup' is defined but never used.","'caseID' is assigned a value but never used.","'onChangeET' is defined but never used.","'noOfEvidenceCollected' is assigned a value but never used.","'description' is assigned a value but never used.","'onChangeLT' is defined but never used.","'officerSIN' is assigned a value but never used.","'onChangeOS' is defined but never used.","React Hook useEffect has a missing dependency: 'cookies.userId'. Either include it or remove the dependency array.",["167"],"'caseIDRef' is assigned a value but never used.","'arrivalTimeRef' is assigned a value but never used.","'timeRef' is assigned a value but never used.","'cityRef' is assigned a value but never used.","'mcaseId' is assigned a value but never used.","'mdate' is assigned a value but never used.","'marrival' is assigned a value but never used.","'mtime' is assigned a value but never used.","'mcity' is assigned a value but never used.","'officerRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setOfficerSIN'. Either include it or remove the dependency array.",["168"],"React Hook useEffect has a missing dependency: 'getOfficerSIN'. Either include it or remove the dependency array.",["169"],"'fname' is assigned a value but never used.","'fnameRef' is assigned a value but never used.","'lname' is assigned a value but never used.","'lnameRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [cookies.userId, setFName, setLName]",{"range":"178","text":"179"},"Update the dependencies array to be: [cookies.userId]",{"range":"180","text":"181"},"Update the dependencies array to be: [setOfficerSIN]",{"range":"182","text":"183"},"Update the dependencies array to be: [getOfficerSIN]",{"range":"184","text":"185"},[1286,1288],"[cookies.userId, setFName, setLName]",[1099,1101],"[cookies.userId]",[3220,3222],"[setOfficerSIN]",[3267,3269],"[getOfficerSIN]"]