[{"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/index.js":"1","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/App.js":"2","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/conf/routes.js":"3","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Home.jsx":"4","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/css/Home.js":"5","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Login.jsx":"6","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/css/Login.js":"7","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/CrimeTrends.jsx":"8","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx":"9","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceLog.jsx":"10"},{"size":267,"mtime":1638404087348,"results":"11","hashOfConfig":"12"},{"size":2613,"mtime":1638900440681,"results":"13","hashOfConfig":"12"},{"size":599,"mtime":1638842313206,"results":"14","hashOfConfig":"12"},{"size":400,"mtime":1638485421020,"results":"15","hashOfConfig":"12"},{"size":1121,"mtime":1638487225008,"results":"16","hashOfConfig":"12"},{"size":5284,"mtime":1638899575867,"results":"17","hashOfConfig":"12"},{"size":1956,"mtime":1638487289834,"results":"18","hashOfConfig":"19"},{"size":3693,"mtime":1638900343389,"results":"20","hashOfConfig":"12"},{"size":3564,"mtime":1638837889465,"results":"21","hashOfConfig":"12"},{"size":6823,"mtime":1638842125153,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"m6nil5",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"irul6s",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/index.js",[],["47","48"],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/App.js",["49","50"],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/conf/routes.js",[],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Home.jsx",["51","52"],"import React from 'react';\nimport Image from '../images/police.jpeg';\nimport {Section, HeroBg, HeroContent, SectionText, ImageBg} from '../css/Home';\n\nexport default function Home () {\n\n    return (\n        <Section>\n            <ImageBg/>\n            <HeroContent>\n                <SectionText>Police Database<br/>Management System</SectionText>\n            </HeroContent>\n        </Section>\n    )\n}","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/css/Home.js",[],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Login.jsx",[],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/css/Login.js",[],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/CrimeTrends.jsx",["53","54","55","56","57"],"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx",["58","59","60"],"import React, {useEffect} from 'react';\nimport useState from 'react-usestateref'\nimport img from '../images/police.jpeg';\nimport {Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend} from 'chart.js';\n  import { Bar } from 'react-chartjs-2';\n\nimport { Container, Form, Row, Col, Image, Button} from 'react-bootstrap';\n\nconst axios = require('axios');\n\n\nexport default function EvidenceTrends () {\n    const [station, setStation] = useState([{}]);\n    const [selectedStation, setSelectedStation] = useState();\n    const [displayChart, setDisplayChart]= useState(false);\n    const[evidenceType, setEvidenceType, evidenceTypeRef] = useState();\n    const[count, setCount, countRef] = useState();\n    ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);\n    let c = [];\n    const e = [];\n\n    function submit() {\n        axios.get('http://localhost:3005/trends/evidence/station', {\n            params: {\n                inputStation: selectedStation\n            }\n        })\n            .then((res) => {\n                if (res) {\n                console.log(res.data)\n                res.data&&res.data.map((record) =>{\n                    e.push(record.evidenceType);\n                    c.push(record.count);\n                });\n\n                setEvidenceType(e)\n                setCount(c)\n                console.log(evidenceTypeRef.current)\n                console.log(countRef.current)\n                setDisplayChart(true);\n                \n                }\n            });\n\n    }\n     \n    useEffect(() => {\n        axios.get('http://localhost:3005/trends/evidence/')\n            .then((res) => {\n                if (res) {\n                    setStation(res.data);\n                }\n            });\n    }, []);\n\n    \n    function onChangeOption (event) {\n        setSelectedStation((Number(event.target.value)+1));\n    }\n    \n    const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top',\n          },\n          title: {\n            display: true,\n            text: 'Evidence',\n          },\n        },\n    };\n      \n\n\n    const chartData = {\n\n        labels: evidenceTypeRef.current,\n        datasets: [\n            {\n            label: 'Occurance',\n            data: countRef.current,\n            backgroundColor: 'green',\n            },\n        ],\n\n    \n    };\n  \n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>Evidence Trends</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <h5>Select Station #</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n\t\t        <Col md={3}>\n\t\t\t        <Form>\n                        <Form.Select as=\"select\" onChange={onChangeOption}>\n                            <option>Select...</option>\n                            {\n                            station && station.map((item, index)=> (\n                                <option value={index}>{item.stationNo}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n                {}\n            </Row>\n            {displayChart? \n                <Bar options={options} data={chartData} />\n                :\n                null\n            }\n        </Container>\n    )\n}","/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceLog.jsx",["61","62","63","64","65","66","67","68"],"import React, {useState, useEffect} from 'react';\nimport img from '../images/police.jpeg';\nimport { Container, Form, Row, Col, Image, Button, InputGroup} from 'react-bootstrap';\nimport moment from 'moment';\n\nconst axios = require('axios');\n\nexport default function EvidenceLog () {\n\n//case ID\nconst [caseID, setCaseID] = useState([{}]);\n\n    useEffect(() => {\n        axios.get('http://localhost:3005/caseID')\n        .then((res) => {\n            if (res) {\n                setCaseID(res.data);\n            }\n    });\n }, []); \n\n function onChangeText (event){ //method for when caseID is entered\n    return(event.target.value);\n}\n\n //Evidence Type -- done select menu\n const [ET, setET] = useState([{}]);\n const getET = () => {\n     axios.get('http://localhost:3005/evidenceLog/ET/')\n     .then((res) => {\n         if (res) {\n             setET(res.data);\n         }\n     });       \n }\n    useEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog/ET')\n    .then((res) => {\n        if (res) {\n            setET(res.data);\n        }\n});\n}, []); \nuseEffect(() => {\n    getET();\n}, []);\n\nfunction onChangeET(onChangeET) //method for when evidenceType is selected\n{\n    axios.get('http://localhost:3005/evidenceLog/ET/')\n    .then((res) => {\n        if (res) {\n            setET(res.data);\n        }\n    })\n}\n\n//date\n\n// date = moment.toDate();\n\n\n//time\n//const time = moment.toTime();\n\n//no of evidence collected\nconst [noOfEvidenceCollected, setNoOfEvidenceCollected] = useState([{}]);\nuseEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog')\n    .then((res) => {\n        if (res) {\n            setNoOfEvidenceCollected(res.data);\n        }\n});\n}, []); \n\nfunction onChangeNumber (event){ //method for when caseID is entered\nreturn(event.target.value);\n}\n//description\nconst [description, setDescription] = useState([{}]);\nuseEffect(() => {\n    axios.get('http://localhost:3005/evidenceLog')\n    .then((res) => {\n        if (res) {\n            setDescription(res.data);\n        }\n});\n}, []); \n\nfunction onChangeEvidence (event){ //method for when caseID is entered\nreturn(event.target.value);}\n\n//log type -- done select menu\nconst [logType, setLogType] = useState([{}]);\nconst getLogType = () => {\n    axios.get('http://localhost:3005/evidenceLog/LT/')\n    .then((res) => {\n        if (res) {\n            setLogType(res.data);\n        }\n    });       \n}\n   useEffect(() => {\n   axios.get('http://localhost:3005/evidenceLog/LT')\n   .then((res) => {\n       if (res) {\n           setLogType(res.data);\n       }\n});\n}, []); \nuseEffect(() => {\n   getLogType();\n}, []);\nfunction onChangeLT(onChangeLT) //method for when evidenceType is selected\n{\n    axios.get('http://localhost:3005/evidenceLog/LT/')\n    .then((res) => {\n        if (res) {\n            setLogType(res.data);\n        }\n    })\n}\n\n//officerSIN\nconst [officerSIN, setOfficerSIN] = useState([{}]);\nconst getOfficerSIN = () => {\n    axios.get('http://localhost:3005/officer/officerSIN/')\n    .then((res) => {\n        if (res) {\n            setOfficerSIN(res.data);\n        }\n    });       \n}\n   useEffect(() => {\n   axios.get('http://localhost:3005/officer/officerSIN')\n   .then((res) => {\n       if (res) {\n           setOfficerSIN(res.data);\n       }\n});\n}, []); \nuseEffect(() => {\n   getOfficerSIN();\n}, []);\n\nfunction onChangeOS(onChangeOS) //method for when officerSIN is inputed\n{\n   axios.get('http://localhost:3005/officer/officerSIN/')\n   .then((res) => {\n       if (res) {\n           setOfficerSIN(res.data);\n       }\n   })\n}\n\n//submit button\nfunction submit()\n{\n    let currentDate = new Date();\n    console.log(moment(currentDate).format('YYYY-MM-DD'));\n    console.log(moment(currentDate).format('hh:mm:ss'));\n    //console.log(selectedET, currentDate, currentTime, InputedNoOfEviCol, InputedDescription, selectedLogType, SelectedOfficerSIN, InputedCaseID);\n    //axios.post('http://localhost:3005/evidenceLog/addEvidence',{\n    //params: {\n    // ET: selectedET,\n    // cDate : currentDate,\n    // noOfEC : InputedNoOfEviCol,\n    // desc : InputedDescription,\n    // selectedLT : selectedLogType,\n    // offSIN : SelectedOfficerSIN,\n    // inputCI : InputedCaseID\n\n    //}      \n//         }).then ((res) =>\n//     {\n//     if (res) {\n// setOutput(res.data);\n// console. log (output)\n//     }\n// });\n//\n}\n    //viewing= get\n    //update= put\n    //adding new things = post\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>Evidence Log</h1>\n                </Col>\n            </Row>\n            <Row>\n\t\t        <Col md={3}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Case ID</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"case ID\" onChange={onChangeText}/>\n                </Form.Group>\n                <Col md={1}>\n                </Col>\n                <Form>\n                <Form.Label>Select evidence type</Form.Label>\n                        <Form.Select as=\"select\">\n                            <option>Select Evidence Type</option>\n                            {ET.length && ET.map((item, index)=> (\n                                <option value={index}>{item.evidenceType}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col>\n                <Form>\n                <Form.Label>Select log type</Form.Label>\n                        <Form.Select as=\"select\">\n                            <option>Select Log Type</option>\n                            {logType.length && logType.map((item, index)=> (\n                                <option value={index}>{item.logType}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Number of Evidence Collected </Form.Label>\n                <Form.Control type=\"text\" placeholder=\"number collected\" onChange={onChangeNumber}/>\n                </Form.Group>\n                <Col md={6}>\n                </Col>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter Evidence Description </Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter description\" onChange={onChangeEvidence}/>\n                </Form.Group>\n                <Col md={6}>\n                <Col md={3}>\n                    <h5>Log New Evidence</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n                   <Image src={img}/> \n                </Col>\n            </Row>\n        </Container>\n    )\n}",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":3,"column":32,"nodeType":"75","messageId":"76","endLine":3,"endColumn":40},{"ruleId":"77","severity":1,"message":"78","line":24,"column":31,"nodeType":"79","messageId":"80","endLine":24,"endColumn":33},{"ruleId":"73","severity":1,"message":"81","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":13},{"ruleId":"73","severity":1,"message":"82","line":3,"column":18,"nodeType":"75","messageId":"76","endLine":3,"endColumn":24},{"ruleId":"73","severity":1,"message":"83","line":14,"column":21,"nodeType":"75","messageId":"76","endLine":14,"endColumn":30},{"ruleId":"73","severity":1,"message":"84","line":14,"column":32,"nodeType":"75","messageId":"76","endLine":14,"endColumn":44},{"ruleId":"73","severity":1,"message":"85","line":17,"column":11,"nodeType":"75","messageId":"76","endLine":17,"endColumn":20},{"ruleId":"73","severity":1,"message":"86","line":18,"column":11,"nodeType":"75","messageId":"76","endLine":18,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":59,"column":49,"nodeType":"89","messageId":"90","endLine":59,"endColumn":51},{"ruleId":"73","severity":1,"message":"91","line":16,"column":11,"nodeType":"75","messageId":"76","endLine":16,"endColumn":23},{"ruleId":"73","severity":1,"message":"86","line":17,"column":11,"nodeType":"75","messageId":"76","endLine":17,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":31,"column":49,"nodeType":"89","messageId":"90","endLine":31,"endColumn":51},{"ruleId":"73","severity":1,"message":"92","line":3,"column":52,"nodeType":"75","messageId":"76","endLine":3,"endColumn":62},{"ruleId":"73","severity":1,"message":"93","line":11,"column":8,"nodeType":"75","messageId":"76","endLine":11,"endColumn":14},{"ruleId":"73","severity":1,"message":"94","line":48,"column":10,"nodeType":"75","messageId":"76","endLine":48,"endColumn":20},{"ruleId":"73","severity":1,"message":"95","line":67,"column":8,"nodeType":"75","messageId":"76","endLine":67,"endColumn":29},{"ruleId":"73","severity":1,"message":"96","line":81,"column":8,"nodeType":"75","messageId":"76","endLine":81,"endColumn":19},{"ruleId":"73","severity":1,"message":"97","line":115,"column":10,"nodeType":"75","messageId":"76","endLine":115,"endColumn":20},{"ruleId":"73","severity":1,"message":"98","line":126,"column":8,"nodeType":"75","messageId":"76","endLine":126,"endColumn":18},{"ruleId":"73","severity":1,"message":"99","line":147,"column":10,"nodeType":"75","messageId":"76","endLine":147,"endColumn":20},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Image' is defined but never used.","'HeroBg' is defined but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'crimeType' is assigned a value but never used.","'count' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'evidenceType' is assigned a value but never used.","'InputGroup' is defined but never used.","'caseID' is assigned a value but never used.","'onChangeET' is defined but never used.","'noOfEvidenceCollected' is assigned a value but never used.","'description' is assigned a value but never used.","'onChangeLT' is defined but never used.","'officerSIN' is assigned a value but never used.","'onChangeOS' is defined but never used.","no-global-assign","no-unsafe-negation"]