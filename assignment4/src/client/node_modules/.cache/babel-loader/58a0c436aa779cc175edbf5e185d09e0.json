{"ast":null,"code":"var _jsxFileName = \"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/CrimeTrends.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport useState from 'react-usestateref';\nimport img from '../images/police.jpeg';\nimport { useCookies } from 'react-cookie';\nimport { Redirect } from \"react-router-dom\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function CrimeTrends() {\n  _s();\n\n  const [cookies, setCookie, removeCookie] = useCookies(['userId']);\n  const [selectedCity, setSelectedCity] = useState();\n  const [displayChart, setDisplayChart] = useState(false);\n  const [crimeType, setCrimeType, crimeTypeRef] = useState();\n  const [count, setCount, countRef] = useState();\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const [city, setCity] = useState([{}]);\n  let c = [];\n  const cr = []; //setting chart values and chart settings\n\n  const chartData = {\n    labels: crimeTypeRef.current,\n    datasets: [{\n      label: 'Crime',\n      data: countRef.current,\n      backgroundColor: ['red', 'blue', 'yellow', 'white', 'brown', 'green', 'purple', 'orange', 'black', 'grey'],\n      borderColor: ['rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  }; //when button is clicked, get crime info with selected city and return as pie chart\n\n  function submit() {\n    console.log(selectedCity);\n    axios.get('http://localhost:3005/trends/crime/city', {\n      params: {\n        inputCity: JSON.stringify(selectedCity)\n      }\n    }).then(res => {\n      if (res) {\n        console.log(res.data);\n        res.data && res.data.map(record => {\n          cr.push(record.Crime);\n          c.push(record.Occurance);\n        });\n        setCrimeType(cr);\n        setCount(c);\n        console.log(crimeTypeRef.current); //ref current is used because file doesn't get a chance to re-render\n\n        console.log(countRef.current);\n        setDisplayChart(true); //when rendering, display pie chart\n      }\n    });\n  }\n\n  function onChangeOption(event) {\n    //everytime user changes the city value, update use state\n    setSelectedCity(event.target.value);\n    console.log(event.target.value);\n  }\n\n  useEffect(() => {\n    //get city data from backend on display of page\n    axios.get('http://localhost:3005/trends/crime/').then(res => {\n      if (res) {\n        setCity(res.data);\n      }\n    });\n  }, []);\n\n  if (!cookies.userId) {\n    // if user isn't logged in, go back to login page    \n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Crime Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-primary\",\n          onClick: submit,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            onChange: onChangeOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), city.length && city.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.city,\n              children: item.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), displayChart ? /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CrimeTrends, \"neMNc/PbULG8MrQ9A36S8TV1GII=\", false, function () {\n  return [useCookies];\n});\n\n_c = CrimeTrends;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrimeTrends\");","map":{"version":3,"sources":["/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/CrimeTrends.jsx"],"names":["React","useEffect","useState","img","useCookies","Redirect","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","Container","Form","Row","Col","Image","Button","axios","require","register","CrimeTrends","cookies","setCookie","removeCookie","selectedCity","setSelectedCity","displayChart","setDisplayChart","crimeType","setCrimeType","crimeTypeRef","count","setCount","countRef","city","setCity","c","cr","chartData","labels","current","datasets","label","data","backgroundColor","borderColor","borderWidth","submit","console","log","get","params","inputCity","JSON","stringify","then","res","map","record","push","Crime","Occurance","onChangeOption","event","target","value","userId","length","item"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport useState from 'react-usestateref'\nimport img from '../images/police.jpeg';\nimport { useCookies } from 'react-cookie';\nimport { Redirect } from \"react-router-dom\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button} from 'react-bootstrap';\n\nconst axios = require('axios');\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default function CrimeTrends () {\n    const [cookies, setCookie, removeCookie] = useCookies(['userId']);\n    const [selectedCity, setSelectedCity] = useState();\n    const [displayChart, setDisplayChart]= useState(false);\n    const[crimeType, setCrimeType, crimeTypeRef] = useState();\n    const[count, setCount, countRef] = useState();\n    ChartJS.register(ArcElement, Tooltip, Legend);\n    const [city, setCity] = useState([{}]);\n    let c = [];\n    const cr = [];\n\n    //setting chart values and chart settings\n    const chartData = {\n        labels: crimeTypeRef.current,\n        datasets: [\n            {\n            label: 'Crime',\n            data: countRef.current,\n            backgroundColor: ['red', 'blue', 'yellow', 'white', 'brown', 'green', 'purple', 'orange', 'black', 'grey'],\n            borderColor: ['rgba(255, 159, 64, 1)', ],\n            borderWidth: 1,\n            },\n        ],\n        };\n        //when button is clicked, get crime info with selected city and return as pie chart\n    function submit() {\n        console.log(selectedCity)\n        axios.get('http://localhost:3005/trends/crime/city', {\n            params: {\n                inputCity: JSON.stringify(selectedCity)\n            }\n            \n        })\n            .then((res) => {\n                if (res) {\n                console.log(res.data)\n                res.data&&res.data.map((record) =>{\n                    cr.push(record.Crime);\n                    c.push(record.Occurance);\n                });\n\n                setCrimeType(cr)\n                setCount(c)\n                console.log(crimeTypeRef.current)//ref current is used because file doesn't get a chance to re-render\n                console.log(countRef.current)\n                setDisplayChart(true);//when rendering, display pie chart\n                \n                }\n            });\n\n    }\n\n    function onChangeOption (event) {//everytime user changes the city value, update use state\n        setSelectedCity(event.target.value);\n        console.log(event.target.value)\n    }\n\n    useEffect(() => {//get city data from backend on display of page\n        axios.get('http://localhost:3005/trends/crime/')\n        .then((res) => {\n            if (res) {\n                setCity(res.data);\n            }\n        });  \n    }, []);\n\n    if (!cookies.userId) {   // if user isn't logged in, go back to login page    \n        return <Redirect to=\"/login\" />\n    }\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>Crime Trends</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <h5>Select City</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n\t\t        <Col md={3}>\n\t\t\t        <Form>\n                        <Form.Select as=\"select\" onChange={onChangeOption}>\n                            <option>Select...</option>\n                            {city.length && city.map((item)=> (\n                                <option value={item.city}>{item.city}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n            </Row>\n            {displayChart? \n                <Pie data={chartData} />\n                :\n                null\n            }\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}