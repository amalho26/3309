{"ast":null,"code":"var _jsxFileName = \"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/CrimeTrends.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport useState from 'react-usestateref';\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function CrimeTrends() {\n  _s();\n\n  const [selectedCity, setSelectedCity] = useState();\n  const [displayChart, setDisplayChart] = useState(false);\n  const [crimeType, setCrimeType, crimeTypeRef] = useState();\n  const [count, setCount, countRef] = useState();\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  let c = [];\n  const cr = [];\n  const [city, setCity] = useState([{}]);\n\n  const getCity = () => {\n    axios.get('http://localhost:3005/trends/crime/').then(res => {\n      if (res) {\n        setCity(res.data);\n      }\n    });\n  };\n\n  const chartData = {\n    labels: crimeTypeRef.current,\n    datasets: [{\n      label: 'Crime',\n      data: countRef.current,\n      backgroundColor: ['red', 'blue', 'yellow', 'white', 'brown', 'green', 'purple', 'orange', 'black', 'grey'],\n      borderColor: ['rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  function submit() {\n    axios.get('http://localhost:3005/trends/crime/city', {\n      params: {\n        inputCity: selectedCity\n      }\n    }).then(res => {\n      if (res) {\n        console.log(res.data);\n        res.data && res.data.map(record => {\n          cr.push(record.crimeType);\n          c.push(record.count);\n        });\n        setCrimeType(cr);\n        setCount(c);\n        console.log(crimeTypeRef.current);\n        console.log(countRef.current);\n        setDisplayChart(true);\n      }\n    });\n  }\n\n  function onChangeOption(event) {\n    setSelectedCity(event.target.value);\n  }\n\n  useEffect(() => {\n    getCity();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Crime Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-primary\",\n          onClick: submit,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            onChange: onChangeOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), city.length && city.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: item.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), displayChart ? /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CrimeTrends, \"UweJA3ZZg5I624fswxegewJ2yEc=\");\n\n_c = CrimeTrends;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrimeTrends\");","map":{"version":3,"sources":["/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/CrimeTrends.jsx"],"names":["React","useEffect","useState","img","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","Container","Form","Row","Col","Image","Button","axios","require","register","CrimeTrends","selectedCity","setSelectedCity","displayChart","setDisplayChart","crimeType","setCrimeType","crimeTypeRef","count","setCount","countRef","c","cr","city","setCity","getCity","get","then","res","data","chartData","labels","current","datasets","label","backgroundColor","borderColor","borderWidth","submit","params","inputCity","console","log","map","record","push","onChangeOption","event","target","value","length","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport useState from 'react-usestateref'\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button} from 'react-bootstrap';\n\nconst axios = require('axios');\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default function CrimeTrends () {\n\n    const [selectedCity, setSelectedCity] = useState();\n    const [displayChart, setDisplayChart]= useState(false);\n    const[crimeType, setCrimeType, crimeTypeRef] = useState();\n    const[count, setCount, countRef] = useState();\n    ChartJS.register(ArcElement, Tooltip, Legend);\n    let c = [];\n    const cr = [];\n\n    \n    const [city, setCity] = useState([{}]);\n\n    const getCity = () => {\n        axios.get('http://localhost:3005/trends/crime/')\n        .then((res) => {\n            if (res) {\n                setCity(res.data);\n            }\n        });       \n    }\n\n    const chartData = {\n        labels: crimeTypeRef.current,\n        datasets: [\n            {\n            label: 'Crime',\n            data: countRef.current,\n            backgroundColor: ['red', 'blue', 'yellow', 'white', 'brown', 'green', 'purple', 'orange', 'black', 'grey'],\n            borderColor: ['rgba(255, 159, 64, 1)', ],\n            borderWidth: 1,\n            },\n        ],\n        };\n\n    function submit() {\n        axios.get('http://localhost:3005/trends/crime/city', {\n            params: {\n                inputCity: selectedCity\n            }\n            \n        })\n            .then((res) => {\n                if (res) {\n                console.log(res.data)\n                res.data&&res.data.map((record) =>{\n                    cr.push(record.crimeType);\n                    c.push(record.count);\n                });\n\n                setCrimeType(cr)\n                setCount(c)\n                console.log(crimeTypeRef.current)\n                console.log(countRef.current)\n                setDisplayChart(true);\n                \n                }\n            });\n\n    }\n\n    function onChangeOption (event) {\n        setSelectedCity((event.target.value));\n    }\n\n    useEffect(() => {\n        getCity();\n    }, []);\n\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col md={6}>\n                    <h1>Crime Trends</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <h5>Select City</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n\t\t        <Col md={3}>\n\t\t\t        <Form>\n                        <Form.Select as=\"select\" onChange={onChangeOption}>\n                            <option>Select...</option>\n                            {city.length && city.map((item, index)=> (\n                                <option value={index}>{item.city}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n            </Row>\n            {displayChart? \n                <Pie data={chartData} />\n                :\n                null\n            }\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}