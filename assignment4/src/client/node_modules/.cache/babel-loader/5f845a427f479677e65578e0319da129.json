{"ast":null,"code":"var _jsxFileName = \"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function EvidenceTrends() {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n  const [station, setStation] = useState([{}]);\n  const [selectedStation, setSelectedStation] = useState();\n  const [output, setOutput] = useState();\n  let evidenceType = [];\n  let count = [];\n  const state = {\n    labels: ['Red', 'Blue', 'Yellow'],\n    datasets: [{\n      label: '# of Votes',\n      data: [12, 19, 3],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\n      borderWidth: 1\n    }]\n  };\n\n  function submit() {\n    console.log(selectedStation);\n    axios.get('http://localhost:3005/trends/evidence/station', {\n      params: {\n        inputStation: selectedStation\n      }\n    }).then(res => {\n      if (res) {\n        const evidence = res.data;\n        setOutput(evidence);\n        evidence.forEach(record => {\n          evidenceType.push(record.evidenceType);\n          count.push(record.count);\n        });\n      }\n    });\n  }\n\n  function setChart() {\n    this.setState({\n      labels: [],\n      datasets: [{\n        label: '',\n        data: [],\n        backgroundColor: [],\n        borderColor: [],\n        borderWidth: 1\n      }]\n    });\n  }\n\n  useEffect(() => {\n    axios.get('http://localhost:3005/trends/evidence/').then(res => {\n      if (res) {\n        setStation(res.data);\n      }\n    });\n  }, []);\n\n  function onChangeOption(event) {\n    setSelectedStation(Number(event.target.value) + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Evidence Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Select Station #\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-primary\",\n          onClick: submit,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            onChange: onChangeOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), station && station.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: item.stationNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: state,\n        options: {\n          title: {\n            display: true,\n            text: 'Average Rainfall per month',\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          },\n          radius: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EvidenceTrends, \"8lUP2i+lXlFxfiyJcJaVoTdvqcY=\");\n\n_c = EvidenceTrends;\n\nvar _c;\n\n$RefreshReg$(_c, \"EvidenceTrends\");","map":{"version":3,"sources":["/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx"],"names":["React","useState","useEffect","img","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","Container","Form","Row","Col","Image","Button","axios","require","register","EvidenceTrends","chartData","setChartData","station","setStation","selectedStation","setSelectedStation","output","setOutput","evidenceType","count","state","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","submit","console","log","get","params","inputStation","then","res","evidence","forEach","record","push","setChart","setState","onChangeOption","event","Number","target","value","map","item","index","stationNo","title","display","text","fontSize","legend","position","radius"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button} from 'react-bootstrap';\n\nconst axios = require('axios');\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default function EvidenceTrends () {\n    const [chartData, setChartData] = useState({});\n    const [station, setStation] = useState([{}]);\n    const [selectedStation, setSelectedStation] = useState();\n    const [output, setOutput] = useState();\n    \n    let evidenceType = [];\n    let count = [];\n\n    const state = {\n        labels: ['Red', 'Blue', 'Yellow'],\n        datasets: [\n        {\n            label: '# of Votes',\n            data: [12, 19, 3],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)','rgba(54, 162, 235, 0.2)','rgba(255, 206, 86, 0.2)',],\n            borderColor: ['rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)',],\n            borderWidth: 1,\n        },\n        ]\n      }\n\n    function submit() {\n        console.log(selectedStation);\n        axios.get('http://localhost:3005/trends/evidence/station', {\n            params: {\n                inputStation: selectedStation\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    const evidence = res.data\n                    setOutput(evidence);\n                   \n                    evidence.forEach(record => {\n                        evidenceType.push(record.evidenceType);\n                        count.push(record.count);\n                      });\n\n\n                }\n            });\n    }\n \n    function setChart() {\n        this.setState ({\n            \n            labels: [],\n            datasets: [\n                {\n                    label: '',\n                    data: [],\n                    backgroundColor: [],\n                    borderColor: [],\n                    borderWidth: 1,\n                },\n            ]\n        });\n    }\n        \n        \n    useEffect(() => {\n        axios.get('http://localhost:3005/trends/evidence/')\n            .then((res) => {\n                if (res) {\n                    setStation(res.data);\n                }\n            });\n    }, []);\n\n    \n    function onChangeOption (event) {\n        setSelectedStation((Number(event.target.value)+1));\n    }\n\n    return (\n        <Container fluid>\n            <Row>\n                \n                <Col md={6}>\n                    <h1>Evidence Trends</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <h5>Select Station #</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n\t\t        <Col md={3}>\n\t\t\t        <Form>\n                        <Form.Select as=\"select\" onChange={onChangeOption}>\n                            <option>Select...</option>\n                            {\n                            station && station.map((item, index)=> (\n                                <option value={index}>{item.stationNo}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n                <Pie\n                    data={state}\n                    options={{\n                        title:{\n                        display:true,\n                        text:'Average Rainfall per month',\n                        fontSize:20,\n                        },\n                        legend:{\n                        display:true,\n                        position:'right'\n                        },\n                        radius: 300,\n                        \n                    }}\n                />\n            </Row>\n            \n        </Container>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}