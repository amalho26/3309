{"ast":null,"code":"var _jsxFileName = \"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nChartJS.register(ArcElement, Tooltip, Legend);\nexport const data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [{\n    label: '# of Votes',\n    data: [12, 19, 3, 5, 2, 3],\n    backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderWidth: 1\n  }]\n};\nexport default function EvidenceTrends() {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n  const [station, setStation] = useState([{}]);\n  const [selectedStation, setSelectedStation] = useState();\n  const [output, setOutput] = useState();\n\n  const chart = () => {\n    setChartData({\n      labels: ['Red', 'Blue', 'Yellow'],\n      datasets: [{\n        label: 'My First Dataset',\n        data: [300, 50, 100],\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n        hoverOffset: 4\n      }]\n    });\n  };\n\n  function submit() {\n    console.log(selectedStation);\n    axios.get('http://localhost:3005/trends/evidence/station', {\n      params: {\n        inputStation: selectedStation\n      }\n    }).then(res => {\n      if (res) {\n        setOutput(res.data);\n        console.log(res.data);\n      }\n    });\n  }\n\n  useEffect(() => {\n    chart();\n    axios.get('http://localhost:3005/trends/evidence/').then(res => {\n      if (res) {\n        setStation(res.data);\n        console.log(res.data);\n      }\n    });\n  }, []);\n\n  function onChangeOption(event) {\n    setSelectedStation(Number(event.target.value) + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Evidence Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Select Station #\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-primary\",\n          onClick: submit,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            onChange: onChangeOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), station && station.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: item.stationNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EvidenceTrends, \"8lUP2i+lXlFxfiyJcJaVoTdvqcY=\");\n\n_c = EvidenceTrends;\nexport function App() {\n  return /*#__PURE__*/_jsxDEV(Pie, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 12\n  }, this);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EvidenceTrends\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx"],"names":["React","useState","useEffect","img","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","Container","Form","Row","Col","Image","Button","axios","require","register","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","EvidenceTrends","chartData","setChartData","station","setStation","selectedStation","setSelectedStation","output","setOutput","chart","hoverOffset","submit","console","log","get","params","inputStation","then","res","onChangeOption","event","Number","target","value","map","item","index","stationNo","App"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button} from 'react-bootstrap';\n\nconst axios = require('axios');\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const data = {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  \nexport default function EvidenceTrends () {\n    const [chartData, setChartData] = useState({});\n    const [station, setStation] = useState([{}]);\n    const [selectedStation, setSelectedStation] = useState();\n    const [output, setOutput] = useState();\n    \n    const chart = () => {\n        setChartData({\n            labels: [\n                'Red',\n                'Blue',\n                'Yellow'\n              ],\n              datasets: [{\n                label: 'My First Dataset',\n                data: [300, 50, 100],\n                backgroundColor: [\n                  'rgb(255, 99, 132)',\n                  'rgb(54, 162, 235)',\n                  'rgb(255, 205, 86)'\n                ],\n                hoverOffset: 4\n              }]\n        })\n        \n    }\n\n    function submit() {\n        console.log(selectedStation);\n        axios.get('http://localhost:3005/trends/evidence/station', {\n            params: {\n                inputStation: selectedStation\n            }\n        })\n            .then((res) => {\n                if (res) {\n                    setOutput(res.data);\n                    console.log(res.data);\n                }\n            });\n\n    }\n        \n\n    useEffect(() => {\n        chart();\n        axios.get('http://localhost:3005/trends/evidence/')\n            .then((res) => {\n                if (res) {\n                    setStation(res.data);\n                    console.log(res.data);\n                    \n                }\n            });\n\n            \n    }, []);\n\n    \n    function onChangeOption (event) {\n        setSelectedStation((Number(event.target.value)+1));\n    }\n\n    return (\n        <Container fluid>\n            <Row>\n                \n                <Col md={6}>\n                    <h1>Evidence Trends</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <h5>Select Station #</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n\t\t        <Col md={3}>\n\t\t\t        <Form>\n                        <Form.Select as=\"select\" onChange={onChangeOption}>\n                            <option>Select...</option>\n                            {\n                            station && station.map((item, index)=> (\n                                <option value={index}>{item.stationNo}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n            </Row>\n            \n            \n        </Container>\n    )\n}\n\n\n\n\n\n\n\n\n\n  export function App() {\n    return <Pie data={data} />;\n  }"]},"metadata":{},"sourceType":"module"}