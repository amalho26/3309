{"ast":null,"code":"var _jsxFileName = \"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react-usestateref';\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function EvidenceTrends() {\n  _s();\n\n  var [station, setStation, ref] = useState(0);\n  const [selectedStation, setSelectedStation] = useState();\n  const [output, setOutput] = useState();\n  const [displayChart, setDisplayChart] = useState(false);\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const [evidenceType, setEvidenceType] = useState();\n  let count = [];\n  let evidence = [];\n  var outputList;\n\n  function submit() {\n    axios.get('http://localhost:3005/trends/evidence/station', {\n      params: {\n        inputStation: selectedStation\n      }\n    }).then(res => {\n      if (res) {\n        console.log(res.data);\n        setOutput(res.data);\n        res.data && res.data.map(record => {\n          evidence.push(record.evidenceType);\n          count.push(record.count);\n          setEvidenceType(evidence);\n        });\n        setDisplayChart(false);\n        console.log(evidenceType); //console.log(count)\n      }\n    });\n  }\n\n  function update() {\n    forceUpdate();\n  }\n\n  useEffect(() => {\n    axios.get('http://localhost:3005/trends/evidence/').then(res => {\n      if (res) {\n        setStation(res.data);\n      }\n    });\n  }, []);\n\n  function onChangeOption(event) {\n    setSelectedStation(Number(event.target.value) + 1);\n  }\n\n  const chartData = {\n    labels: evidenceType,\n    datasets: [{\n      label: '# of Votes',\n      data: [1, 2, 3, 4, 5],\n      backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n      borderColor: ['rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [displayChart ? /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Evidence Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Select Station #\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          class: \"btn btn-primary\",\n          onClick: submit,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            as: \"select\",\n            onChange: onChangeOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), station && station.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: item.stationNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EvidenceTrends, \"JczuMm+UHgCBuOr6nE19vxCAjZI=\");\n\n_c = EvidenceTrends;\n\nvar _c;\n\n$RefreshReg$(_c, \"EvidenceTrends\");","map":{"version":3,"sources":["/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/EvidenceTrends.jsx"],"names":["React","useEffect","useState","img","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","Container","Form","Row","Col","Image","Button","axios","require","register","EvidenceTrends","station","setStation","ref","selectedStation","setSelectedStation","output","setOutput","displayChart","setDisplayChart","updateState","forceUpdate","useCallback","evidenceType","setEvidenceType","count","evidence","outputList","submit","get","params","inputStation","then","res","console","log","data","map","record","push","update","onChangeOption","event","Number","target","value","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","item","index","stationNo"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {useState} from 'react-usestateref'\nimport img from '../images/police.jpeg';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Form, Row, Col, Image, Button} from 'react-bootstrap';\n\nconst axios = require('axios');\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default function EvidenceTrends () {\n    var [station, setStation,ref] = useState(0);\n    const [selectedStation, setSelectedStation] = useState();\n    const [output, setOutput] = useState();\n    const [displayChart, setDisplayChart]= useState(false);\n    const [, updateState] = React.useState();\n    const forceUpdate = React.useCallback(() => updateState({}), []);\n    ChartJS.register(ArcElement, Tooltip, Legend);\n    \n    const[evidenceType, setEvidenceType] = useState();\n    let count = [];\n    let evidence = []\n    var outputList;\n\n\n    function submit() {\n        axios.get('http://localhost:3005/trends/evidence/station', {\n            params: {\n                inputStation: selectedStation\n            }\n        })\n            .then((res) => {\n                if (res) {\n                console.log(res.data)\n                setOutput(res.data);\n                res.data&&res.data.map((record) =>{\n                    evidence.push(record.evidenceType);\n                    count.push(record.count);\n                    setEvidenceType(evidence)\n\n                });\n                \n                setDisplayChart(false);\n                \n                console.log(evidenceType)\n                //console.log(count)\n\n\n                }\n            });\n\n    }\n    \n    function update() {\n        forceUpdate();\n    }    \n    useEffect(() => {\n        axios.get('http://localhost:3005/trends/evidence/')\n            .then((res) => {\n                if (res) {\n                    setStation(res.data);\n                }\n            });\n    }, []);\n\n    \n    function onChangeOption (event) {\n        setSelectedStation((Number(event.target.value)+1));\n    }\n    \n\n    const chartData = {\n    labels: evidenceType,\n    datasets: [\n        {\n        label: '# of Votes',\n        data: [1,2,3,4,5],\n        backgroundColor: ['rgba(255, 99, 132, 0.2)'],\n        borderColor: ['rgba(255, 159, 64, 1)', ],\n        borderWidth: 1,\n        },\n    ],\n    };\n    return (\n        <Container fluid>\n            <Row>\n            {displayChart? \n                <Pie data={chartData} />\n                :\n                <div/>\n                }\n                <Col md={6}>\n                    <h1>Evidence Trends</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <h5>Select Station #</h5>\n                    <Button type=\"submit\" class=\"btn btn-primary\" onClick={submit}>\n                        Enter\n\t\t\t\t    </Button>\n                </Col>\n\t\t        <Col md={3}>\n\t\t\t        <Form>\n                        <Form.Select as=\"select\" onChange={onChangeOption}>\n                            <option>Select...</option>\n                            {\n                            station && station.map((item, index)=> (\n                                <option value={index}>{item.stationNo}</option>\n                            ))}\n                        </Form.Select>\n                    </Form>\n                </Col>\n                <Col md={6}>\n                   <Image src={img}/> \n                </Col>\n                {}\n            </Row>\n            \n        </Container>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}