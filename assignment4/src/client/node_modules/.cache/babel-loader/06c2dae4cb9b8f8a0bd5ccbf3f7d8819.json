{"ast":null,"code":"var _jsxFileName = \"/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Login.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet'; // Need to set these for the cookies\n\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  // Add this line of code to add the cookies handler to your class props\n  propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  }; // use axios\n\n  this.axios = require('axios'); // class component state\n\n  this.state = {\n    email: null,\n    password: null,\n    isAuthenticating: false,\n    errorMessage: null\n  };\n\n  isNotEmptyFields = () => {\n    return this.state.email && this.state.password ? true : false;\n  };\n\n  login = () => {\n    if (!this.isNotEmptyFields()) return;\n    this.setState(prevState => {\n      return Object.assign({}, prevState, {\n        isAuthenticating: true\n      });\n    }, () => {\n      this.loginProcess();\n    });\n  };\n\n  loginProcess = () => {\n    if (this.state.isAuthenticating) {\n      // Assign the credentials to the basic OAuth\n      const username = this.state.email;\n      const password = this.state.password; // Convert to base64\n\n      const token = Buffer.from(`${username}:${password}`, 'utf8').toString('base64');\n      const url = 'http://localhost:3005/authenticate';\n      this.axios.post(url, {}, {\n        headers: {\n          'Authorization': `Basic ${token}`\n        }\n      }).then(response => {\n        // Set the user cookie here\n        this.setState(prevState => {\n          return Object.assign({}, prevState, {\n            isAuthenticating: false\n          });\n        }, () => {\n          if (response.data.id) {\n            this.setUserCookie(response.data.id);\n            window.location.href = '/home';\n          } else {\n            // If there is not id\n            this.setState(prevState => {\n              return Object.assign({}, prevState, {\n                errorMessage: response.data.message\n              });\n            });\n          }\n        });\n      }).catch(() => {\n        this.setState(prevState => {\n          return Object.assign({}, prevState, {\n            isAuthenticating: false\n          });\n        });\n      });\n    }\n  };\n\n  setUserCookie = id => {\n    this.props.cookies.set('userId', id, {\n      path: '/',\n      maxAge: process.env.REACT_APP_ENV_COOKIES_MAX_AGE\n    });\n  }; // We need this to handle the onChange of our input boxes\n\n\n  handleChange = event => {\n    let {\n      name,\n      value\n    } = event.target;\n    this.setState(prevState => {\n      return Object.assign({}, prevState, {\n        [name]: value\n      });\n    });\n  };\n\n  render( /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), this.state.errorMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\"\n            },\n            children: this.state.errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 56\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email address...\",\n                name: \"email\",\n                value: this.state.email,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Enter password...\",\n                name: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: this.state.isAuthenticating ? true : false,\n              variant: \"primary\",\n              type: \"button\",\n              onClick: this.login,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 13\n  }, this));\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/aikam320/Desktop/3309/webInterface/SE3309DBMS/client/src/pages/Login.jsx"],"names":["React","Fragment","Component","Container","Row","Col","Form","Button","Helmet","instanceOf","withCookies","Cookies","Login","propTypes","cookies","isRequired","axios","require","state","email","password","isAuthenticating","errorMessage","isNotEmptyFields","login","setState","prevState","Object","assign","loginProcess","username","token","Buffer","from","toString","url","post","headers","then","response","data","id","setUserCookie","window","location","href","message","catch","props","set","path","maxAge","process","env","REACT_APP_ENV_COOKIES_MAX_AGE","handleChange","event","name","value","target","render","color"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\n\n// Need to set these for the cookies\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nexport default function Login () { \n\n    // Add this line of code to add the cookies handler to your class props\n    propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };   \n        // use axios\n        this.axios = require('axios');\n\n        // class component state\n        this.state = {\n            email: null,\n            password: null,\n            isAuthenticating: false,\n            errorMessage: null\n        }\n    \n\n    isNotEmptyFields = () => {\n        return this.state.email && this.state.password ? true : false\n    }\n\n    login = () => {\n        if (!this.isNotEmptyFields()) return;\n\n        this.setState(prevState => {\n            return Object.assign({}, prevState, {\n                isAuthenticating: true,\n            })\n        }, () => {\n            this.loginProcess();            \n        });\n    }\n\n    loginProcess = () => {\n        if (this.state.isAuthenticating) {\n\n            // Assign the credentials to the basic OAuth\n            const username = this.state.email;\n            const password = this.state.password;\n\n            // Convert to base64\n            const token = Buffer.from(`${username}:${password}`, 'utf8').toString('base64');\n            const url = 'http://localhost:3005/authenticate';\n\n            this.axios.post(url, {}, {\n                headers : {\n                    'Authorization': `Basic ${token}`\n                }\n            })\n            .then((response) => {\n\n                // Set the user cookie here\n                this.setState(prevState => {\n                    return Object.assign({}, prevState, {\n                        isAuthenticating: false\n                    });\n                }, () => {\n\n                    if (response.data.id) {\n                        this.setUserCookie(response.data.id);\n                        window.location.href = '/home';\n                    } else { // If there is not id\n                        this.setState(prevState => {\n                            return Object.assign({}, prevState, {\n                                errorMessage: response.data.message\n                            });\n                        });\n                    }\n                });\n\n            })\n            .catch(() => {\n                this.setState(prevState => {\n                    return Object.assign({}, prevState, {\n                        isAuthenticating: false\n                    })\n                });\n            });\n        }\n    }\n\n\n    setUserCookie = (id) => {\n        this.props.cookies.set('userId', id, {\n            path: '/',\n            maxAge: process.env.REACT_APP_ENV_COOKIES_MAX_AGE\n        });\n    }\n\n    // We need this to handle the onChange of our input boxes\n    handleChange = (event) => {\n        let { name, value } = event.target;\n\n        this.setState(prevState => {\n            return Object.assign({}, prevState, {\n                [name] : value\n            });\n        });\n    }\n\n    render (\n        \n            <Fragment>\n                <Helmet>\n                    <title>Login Page</title>\n                </Helmet>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>Login</h2>\n                            {this.state.errorMessage ? <p style={{color : \"red\"}}>{this.state.errorMessage}</p>:\"\"}\n                            <Form>\n                                <Form.Group>\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        placeholder=\"Enter email address...\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.handleChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"Enter password...\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleChange}\n                                    />\n                                </Form.Group>\n                                <Button disabled={this.state.isAuthenticating ? true : false} variant=\"primary\" type=\"button\" onClick={this.login} >\n                                    Login\n                                </Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            </Fragment>\n        \n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}